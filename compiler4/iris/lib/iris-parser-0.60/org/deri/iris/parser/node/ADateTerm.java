/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.deri.iris.parser.node;

import org.deri.iris.parser.analysis.*;

@SuppressWarnings("nls")
public final class ADateTerm extends PTerm
{
    private TTPreDate _tPreDate_;
    private TTLpar _tLpar_;
    private TTInt _year_;
    private TTComma _tComma_;
    private TTInt _month_;
    private TTComma _c2_;
    private TTInt _day_;
    private TTRpar _tRpar_;

    public ADateTerm()
    {
        // Constructor
    }

    public ADateTerm(
        @SuppressWarnings("hiding") TTPreDate _tPreDate_,
        @SuppressWarnings("hiding") TTLpar _tLpar_,
        @SuppressWarnings("hiding") TTInt _year_,
        @SuppressWarnings("hiding") TTComma _tComma_,
        @SuppressWarnings("hiding") TTInt _month_,
        @SuppressWarnings("hiding") TTComma _c2_,
        @SuppressWarnings("hiding") TTInt _day_,
        @SuppressWarnings("hiding") TTRpar _tRpar_)
    {
        // Constructor
        setTPreDate(_tPreDate_);

        setTLpar(_tLpar_);

        setYear(_year_);

        setTComma(_tComma_);

        setMonth(_month_);

        setC2(_c2_);

        setDay(_day_);

        setTRpar(_tRpar_);

    }

    @Override
    public Object clone()
    {
        return new ADateTerm(
            cloneNode(this._tPreDate_),
            cloneNode(this._tLpar_),
            cloneNode(this._year_),
            cloneNode(this._tComma_),
            cloneNode(this._month_),
            cloneNode(this._c2_),
            cloneNode(this._day_),
            cloneNode(this._tRpar_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADateTerm(this);
    }

    public TTPreDate getTPreDate()
    {
        return this._tPreDate_;
    }

    public void setTPreDate(TTPreDate node)
    {
        if(this._tPreDate_ != null)
        {
            this._tPreDate_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tPreDate_ = node;
    }

    public TTLpar getTLpar()
    {
        return this._tLpar_;
    }

    public void setTLpar(TTLpar node)
    {
        if(this._tLpar_ != null)
        {
            this._tLpar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tLpar_ = node;
    }

    public TTInt getYear()
    {
        return this._year_;
    }

    public void setYear(TTInt node)
    {
        if(this._year_ != null)
        {
            this._year_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._year_ = node;
    }

    public TTComma getTComma()
    {
        return this._tComma_;
    }

    public void setTComma(TTComma node)
    {
        if(this._tComma_ != null)
        {
            this._tComma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tComma_ = node;
    }

    public TTInt getMonth()
    {
        return this._month_;
    }

    public void setMonth(TTInt node)
    {
        if(this._month_ != null)
        {
            this._month_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._month_ = node;
    }

    public TTComma getC2()
    {
        return this._c2_;
    }

    public void setC2(TTComma node)
    {
        if(this._c2_ != null)
        {
            this._c2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._c2_ = node;
    }

    public TTInt getDay()
    {
        return this._day_;
    }

    public void setDay(TTInt node)
    {
        if(this._day_ != null)
        {
            this._day_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._day_ = node;
    }

    public TTRpar getTRpar()
    {
        return this._tRpar_;
    }

    public void setTRpar(TTRpar node)
    {
        if(this._tRpar_ != null)
        {
            this._tRpar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tRpar_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tPreDate_)
            + toString(this._tLpar_)
            + toString(this._year_)
            + toString(this._tComma_)
            + toString(this._month_)
            + toString(this._c2_)
            + toString(this._day_)
            + toString(this._tRpar_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tPreDate_ == child)
        {
            this._tPreDate_ = null;
            return;
        }

        if(this._tLpar_ == child)
        {
            this._tLpar_ = null;
            return;
        }

        if(this._year_ == child)
        {
            this._year_ = null;
            return;
        }

        if(this._tComma_ == child)
        {
            this._tComma_ = null;
            return;
        }

        if(this._month_ == child)
        {
            this._month_ = null;
            return;
        }

        if(this._c2_ == child)
        {
            this._c2_ = null;
            return;
        }

        if(this._day_ == child)
        {
            this._day_ = null;
            return;
        }

        if(this._tRpar_ == child)
        {
            this._tRpar_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tPreDate_ == oldChild)
        {
            setTPreDate((TTPreDate) newChild);
            return;
        }

        if(this._tLpar_ == oldChild)
        {
            setTLpar((TTLpar) newChild);
            return;
        }

        if(this._year_ == oldChild)
        {
            setYear((TTInt) newChild);
            return;
        }

        if(this._tComma_ == oldChild)
        {
            setTComma((TTComma) newChild);
            return;
        }

        if(this._month_ == oldChild)
        {
            setMonth((TTInt) newChild);
            return;
        }

        if(this._c2_ == oldChild)
        {
            setC2((TTComma) newChild);
            return;
        }

        if(this._day_ == oldChild)
        {
            setDay((TTInt) newChild);
            return;
        }

        if(this._tRpar_ == oldChild)
        {
            setTRpar((TTRpar) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
