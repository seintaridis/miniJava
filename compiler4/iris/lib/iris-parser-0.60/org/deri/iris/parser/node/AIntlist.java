/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.deri.iris.parser.node;

import org.deri.iris.parser.analysis.*;

@SuppressWarnings("nls")
public final class AIntlist extends PIntlist
{
    private PIntlist _intlist_;
    private TTComma _tComma_;
    private TTInt _tInt_;

    public AIntlist()
    {
        // Constructor
    }

    public AIntlist(
        @SuppressWarnings("hiding") PIntlist _intlist_,
        @SuppressWarnings("hiding") TTComma _tComma_,
        @SuppressWarnings("hiding") TTInt _tInt_)
    {
        // Constructor
        setIntlist(_intlist_);

        setTComma(_tComma_);

        setTInt(_tInt_);

    }

    @Override
    public Object clone()
    {
        return new AIntlist(
            cloneNode(this._intlist_),
            cloneNode(this._tComma_),
            cloneNode(this._tInt_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIntlist(this);
    }

    public PIntlist getIntlist()
    {
        return this._intlist_;
    }

    public void setIntlist(PIntlist node)
    {
        if(this._intlist_ != null)
        {
            this._intlist_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._intlist_ = node;
    }

    public TTComma getTComma()
    {
        return this._tComma_;
    }

    public void setTComma(TTComma node)
    {
        if(this._tComma_ != null)
        {
            this._tComma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tComma_ = node;
    }

    public TTInt getTInt()
    {
        return this._tInt_;
    }

    public void setTInt(TTInt node)
    {
        if(this._tInt_ != null)
        {
            this._tInt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tInt_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._intlist_)
            + toString(this._tComma_)
            + toString(this._tInt_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._intlist_ == child)
        {
            this._intlist_ = null;
            return;
        }

        if(this._tComma_ == child)
        {
            this._tComma_ = null;
            return;
        }

        if(this._tInt_ == child)
        {
            this._tInt_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._intlist_ == oldChild)
        {
            setIntlist((PIntlist) newChild);
            return;
        }

        if(this._tComma_ == oldChild)
        {
            setTComma((TTComma) newChild);
            return;
        }

        if(this._tInt_ == oldChild)
        {
            setTInt((TTInt) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
