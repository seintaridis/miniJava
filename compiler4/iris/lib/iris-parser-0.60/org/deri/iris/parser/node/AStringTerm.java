/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.deri.iris.parser.node;

import org.deri.iris.parser.analysis.*;

@SuppressWarnings("nls")
public final class AStringTerm extends PTerm
{
    private TTStr _tStr_;

    public AStringTerm()
    {
        // Constructor
    }

    public AStringTerm(
        @SuppressWarnings("hiding") TTStr _tStr_)
    {
        // Constructor
        setTStr(_tStr_);

    }

    @Override
    public Object clone()
    {
        return new AStringTerm(
            cloneNode(this._tStr_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAStringTerm(this);
    }

    public TTStr getTStr()
    {
        return this._tStr_;
    }

    public void setTStr(TTStr node)
    {
        if(this._tStr_ != null)
        {
            this._tStr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tStr_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tStr_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tStr_ == child)
        {
            this._tStr_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tStr_ == oldChild)
        {
            setTStr((TTStr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
