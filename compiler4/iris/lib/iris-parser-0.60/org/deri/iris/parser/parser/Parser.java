/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.deri.iris.parser.parser;

import org.deri.iris.parser.lexer.*;
import org.deri.iris.parser.node.*;
import org.deri.iris.parser.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList nodeList;

    private final Lexer lexer;
    private final ListIterator stack = new LinkedList().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            int middle = (low + high) / 2;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList list = new ArrayList();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    switch(this.action[1])
                    {
                    case 0: /* reduce AAprogram1Program */
		    {
			ArrayList list = new0();
			push(goTo(0), list, false);
		    }
		    break;
                    case 1: /* reduce AAprogram2Program */
		    {
			ArrayList list = new1();
			push(goTo(0), list, false);
		    }
		    break;
                    case 2: /* reduce ARuleExpr */
		    {
			ArrayList list = new2();
			push(goTo(1), list, false);
		    }
		    break;
                    case 3: /* reduce AFactExpr */
		    {
			ArrayList list = new3();
			push(goTo(1), list, false);
		    }
		    break;
                    case 4: /* reduce AQueryExpr */
		    {
			ArrayList list = new4();
			push(goTo(1), list, false);
		    }
		    break;
                    case 5: /* reduce AArule1Rule */
		    {
			ArrayList list = new5();
			push(goTo(2), list, false);
		    }
		    break;
                    case 6: /* reduce AArule2Rule */
		    {
			ArrayList list = new6();
			push(goTo(2), list, false);
		    }
		    break;
                    case 7: /* reduce AFact */
		    {
			ArrayList list = new7();
			push(goTo(3), list, false);
		    }
		    break;
                    case 8: /* reduce AQuery */
		    {
			ArrayList list = new8();
			push(goTo(4), list, false);
		    }
		    break;
                    case 9: /* reduce ALitlist */
		    {
			ArrayList list = new9();
			push(goTo(5), list, false);
		    }
		    break;
                    case 10: /* reduce AAndLitlist */
		    {
			ArrayList list = new10();
			push(goTo(5), list, false);
		    }
		    break;
                    case 11: /* reduce ACommaLitlist */
		    {
			ArrayList list = new11();
			push(goTo(5), list, false);
		    }
		    break;
                    case 12: /* reduce ANegatedLiteral */
		    {
			ArrayList list = new12();
			push(goTo(6), list, false);
		    }
		    break;
                    case 13: /* reduce ALiteral */
		    {
			ArrayList list = new13();
			push(goTo(6), list, false);
		    }
		    break;
                    case 14: /* reduce ABuiltinLiteral */
		    {
			ArrayList list = new14();
			push(goTo(6), list, false);
		    }
		    break;
                    case 15: /* reduce ANegatedbuiltinLiteral */
		    {
			ArrayList list = new15();
			push(goTo(6), list, false);
		    }
		    break;
                    case 16: /* reduce AApredicate1Predicate */
		    {
			ArrayList list = new16();
			push(goTo(7), list, false);
		    }
		    break;
                    case 17: /* reduce AApredicate2Predicate */
		    {
			ArrayList list = new17();
			push(goTo(7), list, false);
		    }
		    break;
                    case 18: /* reduce AAparamlist1Paramlist */
		    {
			ArrayList list = new18();
			push(goTo(8), list, false);
		    }
		    break;
                    case 19: /* reduce AAparamlist2Paramlist */
		    {
			ArrayList list = new19();
			push(goTo(8), list, false);
		    }
		    break;
                    case 20: /* reduce ATermTermlist */
		    {
			ArrayList list = new20();
			push(goTo(9), list, false);
		    }
		    break;
                    case 21: /* reduce ATermlist */
		    {
			ArrayList list = new21();
			push(goTo(9), list, false);
		    }
		    break;
                    case 22: /* reduce AIntlist */
		    {
			ArrayList list = new22();
			push(goTo(10), list, false);
		    }
		    break;
                    case 23: /* reduce AIntIntlist */
		    {
			ArrayList list = new23();
			push(goTo(10), list, false);
		    }
		    break;
                    case 24: /* reduce AFunctionTerm */
		    {
			ArrayList list = new24();
			push(goTo(11), list, false);
		    }
		    break;
                    case 25: /* reduce AVarTerm */
		    {
			ArrayList list = new25();
			push(goTo(11), list, false);
		    }
		    break;
                    case 26: /* reduce AIntegerTerm */
		    {
			ArrayList list = new26();
			push(goTo(11), list, false);
		    }
		    break;
                    case 27: /* reduce AIntegerlTerm */
		    {
			ArrayList list = new27();
			push(goTo(11), list, false);
		    }
		    break;
                    case 28: /* reduce AStringTerm */
		    {
			ArrayList list = new28();
			push(goTo(11), list, false);
		    }
		    break;
                    case 29: /* reduce AStringlTerm */
		    {
			ArrayList list = new29();
			push(goTo(11), list, false);
		    }
		    break;
                    case 30: /* reduce ADecimalTerm */
		    {
			ArrayList list = new30();
			push(goTo(11), list, false);
		    }
		    break;
                    case 31: /* reduce ADecimallTerm */
		    {
			ArrayList list = new31();
			push(goTo(11), list, false);
		    }
		    break;
                    case 32: /* reduce ASqnameTerm */
		    {
			ArrayList list = new32();
			push(goTo(11), list, false);
		    }
		    break;
                    case 33: /* reduce ASqnamelTerm */
		    {
			ArrayList list = new33();
			push(goTo(11), list, false);
		    }
		    break;
                    case 34: /* reduce AIriTerm */
		    {
			ArrayList list = new34();
			push(goTo(11), list, false);
		    }
		    break;
                    case 35: /* reduce AIrilTerm */
		    {
			ArrayList list = new35();
			push(goTo(11), list, false);
		    }
		    break;
                    case 36: /* reduce ABooleanTerm */
		    {
			ArrayList list = new36();
			push(goTo(11), list, false);
		    }
		    break;
                    case 37: /* reduce ADoubleTerm */
		    {
			ArrayList list = new37();
			push(goTo(11), list, false);
		    }
		    break;
                    case 38: /* reduce AFloatTerm */
		    {
			ArrayList list = new38();
			push(goTo(11), list, false);
		    }
		    break;
                    case 39: /* reduce ADateTerm */
		    {
			ArrayList list = new39();
			push(goTo(11), list, false);
		    }
		    break;
                    case 40: /* reduce ADatetzTerm */
		    {
			ArrayList list = new40();
			push(goTo(11), list, false);
		    }
		    break;
                    case 41: /* reduce ATimeisTerm */
		    {
			ArrayList list = new41();
			push(goTo(11), list, false);
		    }
		    break;
                    case 42: /* reduce ATimeistzTerm */
		    {
			ArrayList list = new42();
			push(goTo(11), list, false);
		    }
		    break;
                    case 43: /* reduce ATimefsTerm */
		    {
			ArrayList list = new43();
			push(goTo(11), list, false);
		    }
		    break;
                    case 44: /* reduce ATimefstzTerm */
		    {
			ArrayList list = new44();
			push(goTo(11), list, false);
		    }
		    break;
                    case 45: /* reduce ATimemsTerm */
		    {
			ArrayList list = new45();
			push(goTo(11), list, false);
		    }
		    break;
                    case 46: /* reduce ATimemstzTerm */
		    {
			ArrayList list = new46();
			push(goTo(11), list, false);
		    }
		    break;
                    case 47: /* reduce ADatetimeisTerm */
		    {
			ArrayList list = new47();
			push(goTo(11), list, false);
		    }
		    break;
                    case 48: /* reduce ADatetimeistzTerm */
		    {
			ArrayList list = new48();
			push(goTo(11), list, false);
		    }
		    break;
                    case 49: /* reduce ADatetimefsTerm */
		    {
			ArrayList list = new49();
			push(goTo(11), list, false);
		    }
		    break;
                    case 50: /* reduce ADatetimefstzTerm */
		    {
			ArrayList list = new50();
			push(goTo(11), list, false);
		    }
		    break;
                    case 51: /* reduce ADatetimemsTerm */
		    {
			ArrayList list = new51();
			push(goTo(11), list, false);
		    }
		    break;
                    case 52: /* reduce ADatetimemstzTerm */
		    {
			ArrayList list = new52();
			push(goTo(11), list, false);
		    }
		    break;
                    case 53: /* reduce ADurationisTerm */
		    {
			ArrayList list = new53();
			push(goTo(11), list, false);
		    }
		    break;
                    case 54: /* reduce ADurationfsTerm */
		    {
			ArrayList list = new54();
			push(goTo(11), list, false);
		    }
		    break;
                    case 55: /* reduce ADurationmsTerm */
		    {
			ArrayList list = new55();
			push(goTo(11), list, false);
		    }
		    break;
                    case 56: /* reduce ADaytimedurationfsTerm */
		    {
			ArrayList list = new56();
			push(goTo(11), list, false);
		    }
		    break;
                    case 57: /* reduce ADaytimedurationmsTerm */
		    {
			ArrayList list = new57();
			push(goTo(11), list, false);
		    }
		    break;
                    case 58: /* reduce AYearmonthdurationTerm */
		    {
			ArrayList list = new58();
			push(goTo(11), list, false);
		    }
		    break;
                    case 59: /* reduce AGdayTerm */
		    {
			ArrayList list = new59();
			push(goTo(11), list, false);
		    }
		    break;
                    case 60: /* reduce AGmonthTerm */
		    {
			ArrayList list = new60();
			push(goTo(11), list, false);
		    }
		    break;
                    case 61: /* reduce AGyearTerm */
		    {
			ArrayList list = new61();
			push(goTo(11), list, false);
		    }
		    break;
                    case 62: /* reduce AGyearmonthTerm */
		    {
			ArrayList list = new62();
			push(goTo(11), list, false);
		    }
		    break;
                    case 63: /* reduce AGmonthdayTerm */
		    {
			ArrayList list = new63();
			push(goTo(11), list, false);
		    }
		    break;
                    case 64: /* reduce ABase64binaryTerm */
		    {
			ArrayList list = new64();
			push(goTo(11), list, false);
		    }
		    break;
                    case 65: /* reduce AHexbinaryTerm */
		    {
			ArrayList list = new65();
			push(goTo(11), list, false);
		    }
		    break;
                    case 66: /* reduce AXmlliteralTerm */
		    {
			ArrayList list = new66();
			push(goTo(11), list, false);
		    }
		    break;
                    case 67: /* reduce AXmlliterallangTerm */
		    {
			ArrayList list = new67();
			push(goTo(11), list, false);
		    }
		    break;
                    case 68: /* reduce ARdftextTerm */
		    {
			ArrayList list = new68();
			push(goTo(11), list, false);
		    }
		    break;
                    case 69: /* reduce ABinaryBuiltin */
		    {
			ArrayList list = new69();
			push(goTo(12), list, false);
		    }
		    break;
                    case 70: /* reduce AEqualsBuiltin */
		    {
			ArrayList list = new70();
			push(goTo(12), list, false);
		    }
		    break;
                    case 71: /* reduce ATernaryBuiltin */
		    {
			ArrayList list = new71();
			push(goTo(12), list, false);
		    }
		    break;
                    case 72: /* reduce ATerminal$Expr */
		    {
			ArrayList list = new72();
			push(goTo(13), list, true);
		    }
		    break;
                    case 73: /* reduce ANonTerminal$Expr */
		    {
			ArrayList list = new73();
			push(goTo(13), list, true);
		    }
		    break;
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PProgram node1 = (PProgram) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }



    @SuppressWarnings("unchecked")
    ArrayList new0() /* reduce AAprogram1Program */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        PProgram pprogramNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        }

        pprogramNode1 = new AProgram(listNode2);
        }
	nodeList.add(pprogramNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new1() /* reduce AAprogram2Program */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProgram pprogramNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pprogramNode1 = new AProgram(listNode3);
        }
	nodeList.add(pprogramNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new2() /* reduce ARuleExpr */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        PRule pruleNode2;
        pruleNode2 = (PRule)nodeArrayList1.get(0);

        pexprNode1 = new ARuleExpr(pruleNode2);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new3() /* reduce AFactExpr */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        PFact pfactNode2;
        pfactNode2 = (PFact)nodeArrayList1.get(0);

        pexprNode1 = new AFactExpr(pfactNode2);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new4() /* reduce AQueryExpr */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        PQuery pqueryNode2;
        pqueryNode2 = (PQuery)nodeArrayList1.get(0);

        pexprNode1 = new AQueryExpr(pqueryNode2);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new5() /* reduce AArule1Rule */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PRule pruleNode1;
        {
            // Block
        PLitlist plitlistNode2;
        TTImpliedby ttimpliedbyNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        TTDot ttdotNode5;
        plitlistNode2 = (PLitlist)nodeArrayList1.get(0);
        ttimpliedbyNode3 = (TTImpliedby)nodeArrayList2.get(0);
        ttdotNode5 = (TTDot)nodeArrayList3.get(0);

        pruleNode1 = new ARule(plitlistNode2, ttimpliedbyNode3, null, ttdotNode5);
        }
	nodeList.add(pruleNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new6() /* reduce AArule2Rule */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PRule pruleNode1;
        {
            // Block
        PLitlist plitlistNode2;
        TTImpliedby ttimpliedbyNode3;
        PLitlist plitlistNode4;
        TTDot ttdotNode5;
        plitlistNode2 = (PLitlist)nodeArrayList1.get(0);
        ttimpliedbyNode3 = (TTImpliedby)nodeArrayList2.get(0);
        plitlistNode4 = (PLitlist)nodeArrayList3.get(0);
        ttdotNode5 = (TTDot)nodeArrayList4.get(0);

        pruleNode1 = new ARule(plitlistNode2, ttimpliedbyNode3, plitlistNode4, ttdotNode5);
        }
	nodeList.add(pruleNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new7() /* reduce AFact */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFact pfactNode1;
        {
            // Block
        PPredicate ppredicateNode2;
        TTDot ttdotNode3;
        ppredicateNode2 = (PPredicate)nodeArrayList1.get(0);
        ttdotNode3 = (TTDot)nodeArrayList2.get(0);

        pfactNode1 = new AFact(ppredicateNode2, ttdotNode3);
        }
	nodeList.add(pfactNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new8() /* reduce AQuery */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PQuery pqueryNode1;
        {
            // Block
        TTQuery ttqueryNode2;
        PLitlist plitlistNode3;
        TTDot ttdotNode4;
        ttqueryNode2 = (TTQuery)nodeArrayList1.get(0);
        plitlistNode3 = (PLitlist)nodeArrayList2.get(0);
        ttdotNode4 = (TTDot)nodeArrayList3.get(0);

        pqueryNode1 = new AQuery(ttqueryNode2, plitlistNode3, ttdotNode4);
        }
	nodeList.add(pqueryNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new9() /* reduce ALitlist */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLitlist plitlistNode1;
        {
            // Block
        PLiteral pliteralNode2;
        pliteralNode2 = (PLiteral)nodeArrayList1.get(0);

        plitlistNode1 = new ALitlist(pliteralNode2);
        }
	nodeList.add(plitlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new10() /* reduce AAndLitlist */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLitlist plitlistNode1;
        {
            // Block
        PLitlist plitlistNode2;
        TTAnd ttandNode3;
        PLiteral pliteralNode4;
        plitlistNode2 = (PLitlist)nodeArrayList1.get(0);
        ttandNode3 = (TTAnd)nodeArrayList2.get(0);
        pliteralNode4 = (PLiteral)nodeArrayList3.get(0);

        plitlistNode1 = new AAndLitlist(plitlistNode2, ttandNode3, pliteralNode4);
        }
	nodeList.add(plitlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new11() /* reduce ACommaLitlist */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLitlist plitlistNode1;
        {
            // Block
        PLitlist plitlistNode2;
        TTComma ttcommaNode3;
        PLiteral pliteralNode4;
        plitlistNode2 = (PLitlist)nodeArrayList1.get(0);
        ttcommaNode3 = (TTComma)nodeArrayList2.get(0);
        pliteralNode4 = (PLiteral)nodeArrayList3.get(0);

        plitlistNode1 = new ACommaLitlist(plitlistNode2, ttcommaNode3, pliteralNode4);
        }
	nodeList.add(plitlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new12() /* reduce ANegatedLiteral */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLiteral pliteralNode1;
        {
            // Block
        TTNot ttnotNode2;
        PPredicate ppredicateNode3;
        ttnotNode2 = (TTNot)nodeArrayList1.get(0);
        ppredicateNode3 = (PPredicate)nodeArrayList2.get(0);

        pliteralNode1 = new ANegatedLiteral(ttnotNode2, ppredicateNode3);
        }
	nodeList.add(pliteralNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new13() /* reduce ALiteral */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLiteral pliteralNode1;
        {
            // Block
        PPredicate ppredicateNode2;
        ppredicateNode2 = (PPredicate)nodeArrayList1.get(0);

        pliteralNode1 = new ALiteral(ppredicateNode2);
        }
	nodeList.add(pliteralNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new14() /* reduce ABuiltinLiteral */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLiteral pliteralNode1;
        {
            // Block
        PBuiltin pbuiltinNode2;
        pbuiltinNode2 = (PBuiltin)nodeArrayList1.get(0);

        pliteralNode1 = new ABuiltinLiteral(pbuiltinNode2);
        }
	nodeList.add(pliteralNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new15() /* reduce ANegatedbuiltinLiteral */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLiteral pliteralNode1;
        {
            // Block
        TTNot ttnotNode2;
        PBuiltin pbuiltinNode3;
        ttnotNode2 = (TTNot)nodeArrayList1.get(0);
        pbuiltinNode3 = (PBuiltin)nodeArrayList2.get(0);

        pliteralNode1 = new ANegatedbuiltinLiteral(ttnotNode2, pbuiltinNode3);
        }
	nodeList.add(pliteralNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new16() /* reduce AApredicate1Predicate */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PPredicate ppredicateNode1;
        {
            // Block
        TTId ttidNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ttidNode2 = (TTId)nodeArrayList1.get(0);

        ppredicateNode1 = new APredicate(ttidNode2, null);
        }
	nodeList.add(ppredicateNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new17() /* reduce AApredicate2Predicate */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PPredicate ppredicateNode1;
        {
            // Block
        TTId ttidNode2;
        PParamlist pparamlistNode3;
        ttidNode2 = (TTId)nodeArrayList1.get(0);
        pparamlistNode3 = (PParamlist)nodeArrayList2.get(0);

        ppredicateNode1 = new APredicate(ttidNode2, pparamlistNode3);
        }
	nodeList.add(ppredicateNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new18() /* reduce AAparamlist1Paramlist */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParamlist pparamlistNode1;
        {
            // Block
        TTLpar ttlparNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        TTRpar ttrparNode4;
        ttlparNode2 = (TTLpar)nodeArrayList1.get(0);
        ttrparNode4 = (TTRpar)nodeArrayList2.get(0);

        pparamlistNode1 = new AParamlist(ttlparNode2, null, ttrparNode4);
        }
	nodeList.add(pparamlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new19() /* reduce AAparamlist2Paramlist */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParamlist pparamlistNode1;
        {
            // Block
        TTLpar ttlparNode2;
        PTermlist ptermlistNode3;
        TTRpar ttrparNode4;
        ttlparNode2 = (TTLpar)nodeArrayList1.get(0);
        ptermlistNode3 = (PTermlist)nodeArrayList2.get(0);
        ttrparNode4 = (TTRpar)nodeArrayList3.get(0);

        pparamlistNode1 = new AParamlist(ttlparNode2, ptermlistNode3, ttrparNode4);
        }
	nodeList.add(pparamlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new20() /* reduce ATermTermlist */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTermlist ptermlistNode1;
        {
            // Block
        PTerm ptermNode2;
        ptermNode2 = (PTerm)nodeArrayList1.get(0);

        ptermlistNode1 = new ATermTermlist(ptermNode2);
        }
	nodeList.add(ptermlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new21() /* reduce ATermlist */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTermlist ptermlistNode1;
        {
            // Block
        PTermlist ptermlistNode2;
        TTComma ttcommaNode3;
        PTerm ptermNode4;
        ptermlistNode2 = (PTermlist)nodeArrayList1.get(0);
        ttcommaNode3 = (TTComma)nodeArrayList2.get(0);
        ptermNode4 = (PTerm)nodeArrayList3.get(0);

        ptermlistNode1 = new ATermlist(ptermlistNode2, ttcommaNode3, ptermNode4);
        }
	nodeList.add(ptermlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new22() /* reduce AIntlist */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PIntlist pintlistNode1;
        {
            // Block
        PIntlist pintlistNode2;
        TTComma ttcommaNode3;
        TTInt ttintNode4;
        pintlistNode2 = (PIntlist)nodeArrayList1.get(0);
        ttcommaNode3 = (TTComma)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);

        pintlistNode1 = new AIntlist(pintlistNode2, ttcommaNode3, ttintNode4);
        }
	nodeList.add(pintlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new23() /* reduce AIntIntlist */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PIntlist pintlistNode1;
        {
            // Block
        TTInt ttintNode2;
        ttintNode2 = (TTInt)nodeArrayList1.get(0);

        pintlistNode1 = new AIntIntlist(ttintNode2);
        }
	nodeList.add(pintlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new24() /* reduce AFunctionTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTId ttidNode2;
        PParamlist pparamlistNode3;
        ttidNode2 = (TTId)nodeArrayList1.get(0);
        pparamlistNode3 = (PParamlist)nodeArrayList2.get(0);

        ptermNode1 = new AFunctionTerm(ttidNode2, pparamlistNode3);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new25() /* reduce AVarTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTVariable ttvariableNode2;
        ttvariableNode2 = (TTVariable)nodeArrayList1.get(0);

        ptermNode1 = new AVarTerm(ttvariableNode2);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new26() /* reduce AIntegerTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTInt ttintNode2;
        ttintNode2 = (TTInt)nodeArrayList1.get(0);

        ptermNode1 = new AIntegerTerm(ttintNode2);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new27() /* reduce AIntegerlTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreInteger ttpreintegerNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTRpar ttrparNode5;
        ttpreintegerNode2 = (TTPreInteger)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttrparNode5 = (TTRpar)nodeArrayList4.get(0);

        ptermNode1 = new AIntegerlTerm(ttpreintegerNode2, ttlparNode3, ttintNode4, ttrparNode5);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new28() /* reduce AStringTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTStr ttstrNode2;
        ttstrNode2 = (TTStr)nodeArrayList1.get(0);

        ptermNode1 = new AStringTerm(ttstrNode2);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new29() /* reduce AStringlTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreString ttprestringNode2;
        TTLpar ttlparNode3;
        TTStr ttstrNode4;
        TTRpar ttrparNode5;
        ttprestringNode2 = (TTPreString)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttstrNode4 = (TTStr)nodeArrayList3.get(0);
        ttrparNode5 = (TTRpar)nodeArrayList4.get(0);

        ptermNode1 = new AStringlTerm(ttprestringNode2, ttlparNode3, ttstrNode4, ttrparNode5);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new30() /* reduce ADecimalTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTDec ttdecNode2;
        ttdecNode2 = (TTDec)nodeArrayList1.get(0);

        ptermNode1 = new ADecimalTerm(ttdecNode2);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new31() /* reduce ADecimallTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreDecimal ttpredecimalNode2;
        TTLpar ttlparNode3;
        TTDec ttdecNode4;
        TTRpar ttrparNode5;
        ttpredecimalNode2 = (TTPreDecimal)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttdecNode4 = (TTDec)nodeArrayList3.get(0);
        ttrparNode5 = (TTRpar)nodeArrayList4.get(0);

        ptermNode1 = new ADecimallTerm(ttpredecimalNode2, ttlparNode3, ttdecNode4, ttrparNode5);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new32() /* reduce ASqnameTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTSq ttsqNode2;
        ttsqNode2 = (TTSq)nodeArrayList1.get(0);

        ptermNode1 = new ASqnameTerm(ttsqNode2);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new33() /* reduce ASqnamelTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreSqname ttpresqnameNode2;
        TTLpar ttlparNode3;
        TTSq ttsqNode4;
        TTRpar ttrparNode5;
        ttpresqnameNode2 = (TTPreSqname)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttsqNode4 = (TTSq)nodeArrayList3.get(0);
        ttrparNode5 = (TTRpar)nodeArrayList4.get(0);

        ptermNode1 = new ASqnamelTerm(ttpresqnameNode2, ttlparNode3, ttsqNode4, ttrparNode5);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new34() /* reduce AIriTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTUnders ttundersNode2;
        TTStr ttstrNode3;
        ttundersNode2 = (TTUnders)nodeArrayList1.get(0);
        ttstrNode3 = (TTStr)nodeArrayList2.get(0);

        ptermNode1 = new AIriTerm(ttundersNode2, ttstrNode3);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new35() /* reduce AIrilTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreIri ttpreiriNode2;
        TTLpar ttlparNode3;
        TTStr ttstrNode4;
        TTRpar ttrparNode5;
        ttpreiriNode2 = (TTPreIri)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttstrNode4 = (TTStr)nodeArrayList3.get(0);
        ttrparNode5 = (TTRpar)nodeArrayList4.get(0);

        ptermNode1 = new AIrilTerm(ttpreiriNode2, ttlparNode3, ttstrNode4, ttrparNode5);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new36() /* reduce ABooleanTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreBoolean ttprebooleanNode2;
        TTLpar ttlparNode3;
        TTStr ttstrNode4;
        TTRpar ttrparNode5;
        ttprebooleanNode2 = (TTPreBoolean)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttstrNode4 = (TTStr)nodeArrayList3.get(0);
        ttrparNode5 = (TTRpar)nodeArrayList4.get(0);

        ptermNode1 = new ABooleanTerm(ttprebooleanNode2, ttlparNode3, ttstrNode4, ttrparNode5);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new37() /* reduce ADoubleTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreDouble ttpredoubleNode2;
        TTLpar ttlparNode3;
        TTDec ttdecNode4;
        TTRpar ttrparNode5;
        ttpredoubleNode2 = (TTPreDouble)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttdecNode4 = (TTDec)nodeArrayList3.get(0);
        ttrparNode5 = (TTRpar)nodeArrayList4.get(0);

        ptermNode1 = new ADoubleTerm(ttpredoubleNode2, ttlparNode3, ttdecNode4, ttrparNode5);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new38() /* reduce AFloatTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreFloat ttprefloatNode2;
        TTLpar ttlparNode3;
        TTDec ttdecNode4;
        TTRpar ttrparNode5;
        ttprefloatNode2 = (TTPreFloat)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttdecNode4 = (TTDec)nodeArrayList3.get(0);
        ttrparNode5 = (TTRpar)nodeArrayList4.get(0);

        ptermNode1 = new AFloatTerm(ttprefloatNode2, ttlparNode3, ttdecNode4, ttrparNode5);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new39() /* reduce ADateTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreDate ttpredateNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTComma ttcommaNode5;
        TTInt ttintNode6;
        TTComma ttcommaNode7;
        TTInt ttintNode8;
        TTRpar ttrparNode9;
        ttpredateNode2 = (TTPreDate)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttcommaNode5 = (TTComma)nodeArrayList4.get(0);
        ttintNode6 = (TTInt)nodeArrayList5.get(0);
        ttcommaNode7 = (TTComma)nodeArrayList6.get(0);
        ttintNode8 = (TTInt)nodeArrayList7.get(0);
        ttrparNode9 = (TTRpar)nodeArrayList8.get(0);

        ptermNode1 = new ADateTerm(ttpredateNode2, ttlparNode3, ttintNode4, ttcommaNode5, ttintNode6, ttcommaNode7, ttintNode8, ttrparNode9);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new40() /* reduce ADatetzTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreDate ttpredateNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTComma ttcommaNode5;
        TTInt ttintNode6;
        TTComma ttcommaNode7;
        TTInt ttintNode8;
        TTComma ttcommaNode9;
        TTInt ttintNode10;
        TTComma ttcommaNode11;
        TTInt ttintNode12;
        TTRpar ttrparNode13;
        ttpredateNode2 = (TTPreDate)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttcommaNode5 = (TTComma)nodeArrayList4.get(0);
        ttintNode6 = (TTInt)nodeArrayList5.get(0);
        ttcommaNode7 = (TTComma)nodeArrayList6.get(0);
        ttintNode8 = (TTInt)nodeArrayList7.get(0);
        ttcommaNode9 = (TTComma)nodeArrayList8.get(0);
        ttintNode10 = (TTInt)nodeArrayList9.get(0);
        ttcommaNode11 = (TTComma)nodeArrayList10.get(0);
        ttintNode12 = (TTInt)nodeArrayList11.get(0);
        ttrparNode13 = (TTRpar)nodeArrayList12.get(0);

        ptermNode1 = new ADatetzTerm(ttpredateNode2, ttlparNode3, ttintNode4, ttcommaNode5, ttintNode6, ttcommaNode7, ttintNode8, ttcommaNode9, ttintNode10, ttcommaNode11, ttintNode12, ttrparNode13);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new41() /* reduce ATimeisTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreTime ttpretimeNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTComma ttcommaNode5;
        TTInt ttintNode6;
        TTComma ttcommaNode7;
        TTInt ttintNode8;
        TTRpar ttrparNode9;
        ttpretimeNode2 = (TTPreTime)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttcommaNode5 = (TTComma)nodeArrayList4.get(0);
        ttintNode6 = (TTInt)nodeArrayList5.get(0);
        ttcommaNode7 = (TTComma)nodeArrayList6.get(0);
        ttintNode8 = (TTInt)nodeArrayList7.get(0);
        ttrparNode9 = (TTRpar)nodeArrayList8.get(0);

        ptermNode1 = new ATimeisTerm(ttpretimeNode2, ttlparNode3, ttintNode4, ttcommaNode5, ttintNode6, ttcommaNode7, ttintNode8, ttrparNode9);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new42() /* reduce ATimeistzTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreTime ttpretimeNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTComma ttcommaNode5;
        TTInt ttintNode6;
        TTComma ttcommaNode7;
        TTInt ttintNode8;
        TTComma ttcommaNode9;
        TTInt ttintNode10;
        TTComma ttcommaNode11;
        TTInt ttintNode12;
        TTRpar ttrparNode13;
        ttpretimeNode2 = (TTPreTime)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttcommaNode5 = (TTComma)nodeArrayList4.get(0);
        ttintNode6 = (TTInt)nodeArrayList5.get(0);
        ttcommaNode7 = (TTComma)nodeArrayList6.get(0);
        ttintNode8 = (TTInt)nodeArrayList7.get(0);
        ttcommaNode9 = (TTComma)nodeArrayList8.get(0);
        ttintNode10 = (TTInt)nodeArrayList9.get(0);
        ttcommaNode11 = (TTComma)nodeArrayList10.get(0);
        ttintNode12 = (TTInt)nodeArrayList11.get(0);
        ttrparNode13 = (TTRpar)nodeArrayList12.get(0);

        ptermNode1 = new ATimeistzTerm(ttpretimeNode2, ttlparNode3, ttintNode4, ttcommaNode5, ttintNode6, ttcommaNode7, ttintNode8, ttcommaNode9, ttintNode10, ttcommaNode11, ttintNode12, ttrparNode13);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new43() /* reduce ATimefsTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreTime ttpretimeNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTComma ttcommaNode5;
        TTInt ttintNode6;
        TTComma ttcommaNode7;
        TTDec ttdecNode8;
        TTRpar ttrparNode9;
        ttpretimeNode2 = (TTPreTime)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttcommaNode5 = (TTComma)nodeArrayList4.get(0);
        ttintNode6 = (TTInt)nodeArrayList5.get(0);
        ttcommaNode7 = (TTComma)nodeArrayList6.get(0);
        ttdecNode8 = (TTDec)nodeArrayList7.get(0);
        ttrparNode9 = (TTRpar)nodeArrayList8.get(0);

        ptermNode1 = new ATimefsTerm(ttpretimeNode2, ttlparNode3, ttintNode4, ttcommaNode5, ttintNode6, ttcommaNode7, ttdecNode8, ttrparNode9);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new44() /* reduce ATimefstzTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreTime ttpretimeNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTComma ttcommaNode5;
        TTInt ttintNode6;
        TTComma ttcommaNode7;
        TTDec ttdecNode8;
        TTComma ttcommaNode9;
        TTInt ttintNode10;
        TTComma ttcommaNode11;
        TTInt ttintNode12;
        TTRpar ttrparNode13;
        ttpretimeNode2 = (TTPreTime)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttcommaNode5 = (TTComma)nodeArrayList4.get(0);
        ttintNode6 = (TTInt)nodeArrayList5.get(0);
        ttcommaNode7 = (TTComma)nodeArrayList6.get(0);
        ttdecNode8 = (TTDec)nodeArrayList7.get(0);
        ttcommaNode9 = (TTComma)nodeArrayList8.get(0);
        ttintNode10 = (TTInt)nodeArrayList9.get(0);
        ttcommaNode11 = (TTComma)nodeArrayList10.get(0);
        ttintNode12 = (TTInt)nodeArrayList11.get(0);
        ttrparNode13 = (TTRpar)nodeArrayList12.get(0);

        ptermNode1 = new ATimefstzTerm(ttpretimeNode2, ttlparNode3, ttintNode4, ttcommaNode5, ttintNode6, ttcommaNode7, ttdecNode8, ttcommaNode9, ttintNode10, ttcommaNode11, ttintNode12, ttrparNode13);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new45() /* reduce ATimemsTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreTime ttpretimeNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTComma ttcommaNode5;
        TTInt ttintNode6;
        TTComma ttcommaNode7;
        TTInt ttintNode8;
        TTComma ttcommaNode9;
        TTInt ttintNode10;
        TTRpar ttrparNode11;
        ttpretimeNode2 = (TTPreTime)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttcommaNode5 = (TTComma)nodeArrayList4.get(0);
        ttintNode6 = (TTInt)nodeArrayList5.get(0);
        ttcommaNode7 = (TTComma)nodeArrayList6.get(0);
        ttintNode8 = (TTInt)nodeArrayList7.get(0);
        ttcommaNode9 = (TTComma)nodeArrayList8.get(0);
        ttintNode10 = (TTInt)nodeArrayList9.get(0);
        ttrparNode11 = (TTRpar)nodeArrayList10.get(0);

        ptermNode1 = new ATimemsTerm(ttpretimeNode2, ttlparNode3, ttintNode4, ttcommaNode5, ttintNode6, ttcommaNode7, ttintNode8, ttcommaNode9, ttintNode10, ttrparNode11);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new46() /* reduce ATimemstzTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList14 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList13 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreTime ttpretimeNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTComma ttcommaNode5;
        TTInt ttintNode6;
        TTComma ttcommaNode7;
        TTInt ttintNode8;
        TTComma ttcommaNode9;
        TTInt ttintNode10;
        TTComma ttcommaNode11;
        TTInt ttintNode12;
        TTComma ttcommaNode13;
        TTInt ttintNode14;
        TTRpar ttrparNode15;
        ttpretimeNode2 = (TTPreTime)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttcommaNode5 = (TTComma)nodeArrayList4.get(0);
        ttintNode6 = (TTInt)nodeArrayList5.get(0);
        ttcommaNode7 = (TTComma)nodeArrayList6.get(0);
        ttintNode8 = (TTInt)nodeArrayList7.get(0);
        ttcommaNode9 = (TTComma)nodeArrayList8.get(0);
        ttintNode10 = (TTInt)nodeArrayList9.get(0);
        ttcommaNode11 = (TTComma)nodeArrayList10.get(0);
        ttintNode12 = (TTInt)nodeArrayList11.get(0);
        ttcommaNode13 = (TTComma)nodeArrayList12.get(0);
        ttintNode14 = (TTInt)nodeArrayList13.get(0);
        ttrparNode15 = (TTRpar)nodeArrayList14.get(0);

        ptermNode1 = new ATimemstzTerm(ttpretimeNode2, ttlparNode3, ttintNode4, ttcommaNode5, ttintNode6, ttcommaNode7, ttintNode8, ttcommaNode9, ttintNode10, ttcommaNode11, ttintNode12, ttcommaNode13, ttintNode14, ttrparNode15);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new47() /* reduce ADatetimeisTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList14 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList13 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreDatetime ttpredatetimeNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTComma ttcommaNode5;
        TTInt ttintNode6;
        TTComma ttcommaNode7;
        TTInt ttintNode8;
        TTComma ttcommaNode9;
        TTInt ttintNode10;
        TTComma ttcommaNode11;
        TTInt ttintNode12;
        TTComma ttcommaNode13;
        TTInt ttintNode14;
        TTRpar ttrparNode15;
        ttpredatetimeNode2 = (TTPreDatetime)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttcommaNode5 = (TTComma)nodeArrayList4.get(0);
        ttintNode6 = (TTInt)nodeArrayList5.get(0);
        ttcommaNode7 = (TTComma)nodeArrayList6.get(0);
        ttintNode8 = (TTInt)nodeArrayList7.get(0);
        ttcommaNode9 = (TTComma)nodeArrayList8.get(0);
        ttintNode10 = (TTInt)nodeArrayList9.get(0);
        ttcommaNode11 = (TTComma)nodeArrayList10.get(0);
        ttintNode12 = (TTInt)nodeArrayList11.get(0);
        ttcommaNode13 = (TTComma)nodeArrayList12.get(0);
        ttintNode14 = (TTInt)nodeArrayList13.get(0);
        ttrparNode15 = (TTRpar)nodeArrayList14.get(0);

        ptermNode1 = new ADatetimeisTerm(ttpredatetimeNode2, ttlparNode3, ttintNode4, ttcommaNode5, ttintNode6, ttcommaNode7, ttintNode8, ttcommaNode9, ttintNode10, ttcommaNode11, ttintNode12, ttcommaNode13, ttintNode14, ttrparNode15);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new48() /* reduce ADatetimeistzTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList18 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList17 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList16 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList15 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList14 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList13 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreDatetime ttpredatetimeNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTComma ttcommaNode5;
        TTInt ttintNode6;
        TTComma ttcommaNode7;
        TTInt ttintNode8;
        TTComma ttcommaNode9;
        TTInt ttintNode10;
        TTComma ttcommaNode11;
        TTInt ttintNode12;
        TTComma ttcommaNode13;
        TTInt ttintNode14;
        TTComma ttcommaNode15;
        TTInt ttintNode16;
        TTComma ttcommaNode17;
        TTInt ttintNode18;
        TTRpar ttrparNode19;
        ttpredatetimeNode2 = (TTPreDatetime)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttcommaNode5 = (TTComma)nodeArrayList4.get(0);
        ttintNode6 = (TTInt)nodeArrayList5.get(0);
        ttcommaNode7 = (TTComma)nodeArrayList6.get(0);
        ttintNode8 = (TTInt)nodeArrayList7.get(0);
        ttcommaNode9 = (TTComma)nodeArrayList8.get(0);
        ttintNode10 = (TTInt)nodeArrayList9.get(0);
        ttcommaNode11 = (TTComma)nodeArrayList10.get(0);
        ttintNode12 = (TTInt)nodeArrayList11.get(0);
        ttcommaNode13 = (TTComma)nodeArrayList12.get(0);
        ttintNode14 = (TTInt)nodeArrayList13.get(0);
        ttcommaNode15 = (TTComma)nodeArrayList14.get(0);
        ttintNode16 = (TTInt)nodeArrayList15.get(0);
        ttcommaNode17 = (TTComma)nodeArrayList16.get(0);
        ttintNode18 = (TTInt)nodeArrayList17.get(0);
        ttrparNode19 = (TTRpar)nodeArrayList18.get(0);

        ptermNode1 = new ADatetimeistzTerm(ttpredatetimeNode2, ttlparNode3, ttintNode4, ttcommaNode5, ttintNode6, ttcommaNode7, ttintNode8, ttcommaNode9, ttintNode10, ttcommaNode11, ttintNode12, ttcommaNode13, ttintNode14, ttcommaNode15, ttintNode16, ttcommaNode17, ttintNode18, ttrparNode19);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new49() /* reduce ADatetimefsTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList14 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList13 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreDatetime ttpredatetimeNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTComma ttcommaNode5;
        TTInt ttintNode6;
        TTComma ttcommaNode7;
        TTInt ttintNode8;
        TTComma ttcommaNode9;
        TTInt ttintNode10;
        TTComma ttcommaNode11;
        TTInt ttintNode12;
        TTComma ttcommaNode13;
        TTDec ttdecNode14;
        TTRpar ttrparNode15;
        ttpredatetimeNode2 = (TTPreDatetime)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttcommaNode5 = (TTComma)nodeArrayList4.get(0);
        ttintNode6 = (TTInt)nodeArrayList5.get(0);
        ttcommaNode7 = (TTComma)nodeArrayList6.get(0);
        ttintNode8 = (TTInt)nodeArrayList7.get(0);
        ttcommaNode9 = (TTComma)nodeArrayList8.get(0);
        ttintNode10 = (TTInt)nodeArrayList9.get(0);
        ttcommaNode11 = (TTComma)nodeArrayList10.get(0);
        ttintNode12 = (TTInt)nodeArrayList11.get(0);
        ttcommaNode13 = (TTComma)nodeArrayList12.get(0);
        ttdecNode14 = (TTDec)nodeArrayList13.get(0);
        ttrparNode15 = (TTRpar)nodeArrayList14.get(0);

        ptermNode1 = new ADatetimefsTerm(ttpredatetimeNode2, ttlparNode3, ttintNode4, ttcommaNode5, ttintNode6, ttcommaNode7, ttintNode8, ttcommaNode9, ttintNode10, ttcommaNode11, ttintNode12, ttcommaNode13, ttdecNode14, ttrparNode15);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new50() /* reduce ADatetimefstzTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList18 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList17 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList16 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList15 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList14 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList13 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreDatetime ttpredatetimeNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTComma ttcommaNode5;
        TTInt ttintNode6;
        TTComma ttcommaNode7;
        TTInt ttintNode8;
        TTComma ttcommaNode9;
        TTInt ttintNode10;
        TTComma ttcommaNode11;
        TTInt ttintNode12;
        TTComma ttcommaNode13;
        TTDec ttdecNode14;
        TTComma ttcommaNode15;
        TTInt ttintNode16;
        TTComma ttcommaNode17;
        TTInt ttintNode18;
        TTRpar ttrparNode19;
        ttpredatetimeNode2 = (TTPreDatetime)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttcommaNode5 = (TTComma)nodeArrayList4.get(0);
        ttintNode6 = (TTInt)nodeArrayList5.get(0);
        ttcommaNode7 = (TTComma)nodeArrayList6.get(0);
        ttintNode8 = (TTInt)nodeArrayList7.get(0);
        ttcommaNode9 = (TTComma)nodeArrayList8.get(0);
        ttintNode10 = (TTInt)nodeArrayList9.get(0);
        ttcommaNode11 = (TTComma)nodeArrayList10.get(0);
        ttintNode12 = (TTInt)nodeArrayList11.get(0);
        ttcommaNode13 = (TTComma)nodeArrayList12.get(0);
        ttdecNode14 = (TTDec)nodeArrayList13.get(0);
        ttcommaNode15 = (TTComma)nodeArrayList14.get(0);
        ttintNode16 = (TTInt)nodeArrayList15.get(0);
        ttcommaNode17 = (TTComma)nodeArrayList16.get(0);
        ttintNode18 = (TTInt)nodeArrayList17.get(0);
        ttrparNode19 = (TTRpar)nodeArrayList18.get(0);

        ptermNode1 = new ADatetimefstzTerm(ttpredatetimeNode2, ttlparNode3, ttintNode4, ttcommaNode5, ttintNode6, ttcommaNode7, ttintNode8, ttcommaNode9, ttintNode10, ttcommaNode11, ttintNode12, ttcommaNode13, ttdecNode14, ttcommaNode15, ttintNode16, ttcommaNode17, ttintNode18, ttrparNode19);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new51() /* reduce ADatetimemsTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList16 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList15 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList14 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList13 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreDatetime ttpredatetimeNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTComma ttcommaNode5;
        TTInt ttintNode6;
        TTComma ttcommaNode7;
        TTInt ttintNode8;
        TTComma ttcommaNode9;
        TTInt ttintNode10;
        TTComma ttcommaNode11;
        TTInt ttintNode12;
        TTComma ttcommaNode13;
        TTInt ttintNode14;
        TTComma ttcommaNode15;
        TTInt ttintNode16;
        TTRpar ttrparNode17;
        ttpredatetimeNode2 = (TTPreDatetime)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttcommaNode5 = (TTComma)nodeArrayList4.get(0);
        ttintNode6 = (TTInt)nodeArrayList5.get(0);
        ttcommaNode7 = (TTComma)nodeArrayList6.get(0);
        ttintNode8 = (TTInt)nodeArrayList7.get(0);
        ttcommaNode9 = (TTComma)nodeArrayList8.get(0);
        ttintNode10 = (TTInt)nodeArrayList9.get(0);
        ttcommaNode11 = (TTComma)nodeArrayList10.get(0);
        ttintNode12 = (TTInt)nodeArrayList11.get(0);
        ttcommaNode13 = (TTComma)nodeArrayList12.get(0);
        ttintNode14 = (TTInt)nodeArrayList13.get(0);
        ttcommaNode15 = (TTComma)nodeArrayList14.get(0);
        ttintNode16 = (TTInt)nodeArrayList15.get(0);
        ttrparNode17 = (TTRpar)nodeArrayList16.get(0);

        ptermNode1 = new ADatetimemsTerm(ttpredatetimeNode2, ttlparNode3, ttintNode4, ttcommaNode5, ttintNode6, ttcommaNode7, ttintNode8, ttcommaNode9, ttintNode10, ttcommaNode11, ttintNode12, ttcommaNode13, ttintNode14, ttcommaNode15, ttintNode16, ttrparNode17);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new52() /* reduce ADatetimemstzTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList20 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList19 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList18 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList17 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList16 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList15 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList14 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList13 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreDatetime ttpredatetimeNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTComma ttcommaNode5;
        TTInt ttintNode6;
        TTComma ttcommaNode7;
        TTInt ttintNode8;
        TTComma ttcommaNode9;
        TTInt ttintNode10;
        TTComma ttcommaNode11;
        TTInt ttintNode12;
        TTComma ttcommaNode13;
        TTInt ttintNode14;
        TTComma ttcommaNode15;
        TTInt ttintNode16;
        TTComma ttcommaNode17;
        TTInt ttintNode18;
        TTComma ttcommaNode19;
        TTInt ttintNode20;
        TTRpar ttrparNode21;
        ttpredatetimeNode2 = (TTPreDatetime)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttcommaNode5 = (TTComma)nodeArrayList4.get(0);
        ttintNode6 = (TTInt)nodeArrayList5.get(0);
        ttcommaNode7 = (TTComma)nodeArrayList6.get(0);
        ttintNode8 = (TTInt)nodeArrayList7.get(0);
        ttcommaNode9 = (TTComma)nodeArrayList8.get(0);
        ttintNode10 = (TTInt)nodeArrayList9.get(0);
        ttcommaNode11 = (TTComma)nodeArrayList10.get(0);
        ttintNode12 = (TTInt)nodeArrayList11.get(0);
        ttcommaNode13 = (TTComma)nodeArrayList12.get(0);
        ttintNode14 = (TTInt)nodeArrayList13.get(0);
        ttcommaNode15 = (TTComma)nodeArrayList14.get(0);
        ttintNode16 = (TTInt)nodeArrayList15.get(0);
        ttcommaNode17 = (TTComma)nodeArrayList16.get(0);
        ttintNode18 = (TTInt)nodeArrayList17.get(0);
        ttcommaNode19 = (TTComma)nodeArrayList18.get(0);
        ttintNode20 = (TTInt)nodeArrayList19.get(0);
        ttrparNode21 = (TTRpar)nodeArrayList20.get(0);

        ptermNode1 = new ADatetimemstzTerm(ttpredatetimeNode2, ttlparNode3, ttintNode4, ttcommaNode5, ttintNode6, ttcommaNode7, ttintNode8, ttcommaNode9, ttintNode10, ttcommaNode11, ttintNode12, ttcommaNode13, ttintNode14, ttcommaNode15, ttintNode16, ttcommaNode17, ttintNode18, ttcommaNode19, ttintNode20, ttrparNode21);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new53() /* reduce ADurationisTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList14 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList13 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreDuration ttpredurationNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTComma ttcommaNode5;
        TTInt ttintNode6;
        TTComma ttcommaNode7;
        TTInt ttintNode8;
        TTComma ttcommaNode9;
        TTInt ttintNode10;
        TTComma ttcommaNode11;
        TTInt ttintNode12;
        TTComma ttcommaNode13;
        TTInt ttintNode14;
        TTRpar ttrparNode15;
        ttpredurationNode2 = (TTPreDuration)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttcommaNode5 = (TTComma)nodeArrayList4.get(0);
        ttintNode6 = (TTInt)nodeArrayList5.get(0);
        ttcommaNode7 = (TTComma)nodeArrayList6.get(0);
        ttintNode8 = (TTInt)nodeArrayList7.get(0);
        ttcommaNode9 = (TTComma)nodeArrayList8.get(0);
        ttintNode10 = (TTInt)nodeArrayList9.get(0);
        ttcommaNode11 = (TTComma)nodeArrayList10.get(0);
        ttintNode12 = (TTInt)nodeArrayList11.get(0);
        ttcommaNode13 = (TTComma)nodeArrayList12.get(0);
        ttintNode14 = (TTInt)nodeArrayList13.get(0);
        ttrparNode15 = (TTRpar)nodeArrayList14.get(0);

        ptermNode1 = new ADurationisTerm(ttpredurationNode2, ttlparNode3, ttintNode4, ttcommaNode5, ttintNode6, ttcommaNode7, ttintNode8, ttcommaNode9, ttintNode10, ttcommaNode11, ttintNode12, ttcommaNode13, ttintNode14, ttrparNode15);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new54() /* reduce ADurationfsTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList14 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList13 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreDuration ttpredurationNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTComma ttcommaNode5;
        TTInt ttintNode6;
        TTComma ttcommaNode7;
        TTInt ttintNode8;
        TTComma ttcommaNode9;
        TTInt ttintNode10;
        TTComma ttcommaNode11;
        TTInt ttintNode12;
        TTComma ttcommaNode13;
        TTDec ttdecNode14;
        TTRpar ttrparNode15;
        ttpredurationNode2 = (TTPreDuration)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttcommaNode5 = (TTComma)nodeArrayList4.get(0);
        ttintNode6 = (TTInt)nodeArrayList5.get(0);
        ttcommaNode7 = (TTComma)nodeArrayList6.get(0);
        ttintNode8 = (TTInt)nodeArrayList7.get(0);
        ttcommaNode9 = (TTComma)nodeArrayList8.get(0);
        ttintNode10 = (TTInt)nodeArrayList9.get(0);
        ttcommaNode11 = (TTComma)nodeArrayList10.get(0);
        ttintNode12 = (TTInt)nodeArrayList11.get(0);
        ttcommaNode13 = (TTComma)nodeArrayList12.get(0);
        ttdecNode14 = (TTDec)nodeArrayList13.get(0);
        ttrparNode15 = (TTRpar)nodeArrayList14.get(0);

        ptermNode1 = new ADurationfsTerm(ttpredurationNode2, ttlparNode3, ttintNode4, ttcommaNode5, ttintNode6, ttcommaNode7, ttintNode8, ttcommaNode9, ttintNode10, ttcommaNode11, ttintNode12, ttcommaNode13, ttdecNode14, ttrparNode15);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new55() /* reduce ADurationmsTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList16 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList15 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList14 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList13 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreDuration ttpredurationNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTComma ttcommaNode5;
        TTInt ttintNode6;
        TTComma ttcommaNode7;
        TTInt ttintNode8;
        TTComma ttcommaNode9;
        TTInt ttintNode10;
        TTComma ttcommaNode11;
        TTInt ttintNode12;
        TTComma ttcommaNode13;
        TTInt ttintNode14;
        TTComma ttcommaNode15;
        TTInt ttintNode16;
        TTRpar ttrparNode17;
        ttpredurationNode2 = (TTPreDuration)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttcommaNode5 = (TTComma)nodeArrayList4.get(0);
        ttintNode6 = (TTInt)nodeArrayList5.get(0);
        ttcommaNode7 = (TTComma)nodeArrayList6.get(0);
        ttintNode8 = (TTInt)nodeArrayList7.get(0);
        ttcommaNode9 = (TTComma)nodeArrayList8.get(0);
        ttintNode10 = (TTInt)nodeArrayList9.get(0);
        ttcommaNode11 = (TTComma)nodeArrayList10.get(0);
        ttintNode12 = (TTInt)nodeArrayList11.get(0);
        ttcommaNode13 = (TTComma)nodeArrayList12.get(0);
        ttintNode14 = (TTInt)nodeArrayList13.get(0);
        ttcommaNode15 = (TTComma)nodeArrayList14.get(0);
        ttintNode16 = (TTInt)nodeArrayList15.get(0);
        ttrparNode17 = (TTRpar)nodeArrayList16.get(0);

        ptermNode1 = new ADurationmsTerm(ttpredurationNode2, ttlparNode3, ttintNode4, ttcommaNode5, ttintNode6, ttcommaNode7, ttintNode8, ttcommaNode9, ttintNode10, ttcommaNode11, ttintNode12, ttcommaNode13, ttintNode14, ttcommaNode15, ttintNode16, ttrparNode17);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new56() /* reduce ADaytimedurationfsTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreDaytimeduration ttpredaytimedurationNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTComma ttcommaNode5;
        TTInt ttintNode6;
        TTComma ttcommaNode7;
        TTInt ttintNode8;
        TTComma ttcommaNode9;
        TTDec ttdecNode10;
        TTRpar ttrparNode11;
        ttpredaytimedurationNode2 = (TTPreDaytimeduration)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttcommaNode5 = (TTComma)nodeArrayList4.get(0);
        ttintNode6 = (TTInt)nodeArrayList5.get(0);
        ttcommaNode7 = (TTComma)nodeArrayList6.get(0);
        ttintNode8 = (TTInt)nodeArrayList7.get(0);
        ttcommaNode9 = (TTComma)nodeArrayList8.get(0);
        ttdecNode10 = (TTDec)nodeArrayList9.get(0);
        ttrparNode11 = (TTRpar)nodeArrayList10.get(0);

        ptermNode1 = new ADaytimedurationfsTerm(ttpredaytimedurationNode2, ttlparNode3, ttintNode4, ttcommaNode5, ttintNode6, ttcommaNode7, ttintNode8, ttcommaNode9, ttdecNode10, ttrparNode11);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new57() /* reduce ADaytimedurationmsTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreDaytimeduration ttpredaytimedurationNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTComma ttcommaNode5;
        TTInt ttintNode6;
        TTComma ttcommaNode7;
        TTInt ttintNode8;
        TTComma ttcommaNode9;
        TTInt ttintNode10;
        TTComma ttcommaNode11;
        TTInt ttintNode12;
        TTRpar ttrparNode13;
        ttpredaytimedurationNode2 = (TTPreDaytimeduration)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttcommaNode5 = (TTComma)nodeArrayList4.get(0);
        ttintNode6 = (TTInt)nodeArrayList5.get(0);
        ttcommaNode7 = (TTComma)nodeArrayList6.get(0);
        ttintNode8 = (TTInt)nodeArrayList7.get(0);
        ttcommaNode9 = (TTComma)nodeArrayList8.get(0);
        ttintNode10 = (TTInt)nodeArrayList9.get(0);
        ttcommaNode11 = (TTComma)nodeArrayList10.get(0);
        ttintNode12 = (TTInt)nodeArrayList11.get(0);
        ttrparNode13 = (TTRpar)nodeArrayList12.get(0);

        ptermNode1 = new ADaytimedurationmsTerm(ttpredaytimedurationNode2, ttlparNode3, ttintNode4, ttcommaNode5, ttintNode6, ttcommaNode7, ttintNode8, ttcommaNode9, ttintNode10, ttcommaNode11, ttintNode12, ttrparNode13);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new58() /* reduce AYearmonthdurationTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreYearmonthduration ttpreyearmonthdurationNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTComma ttcommaNode5;
        TTInt ttintNode6;
        TTRpar ttrparNode7;
        ttpreyearmonthdurationNode2 = (TTPreYearmonthduration)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttcommaNode5 = (TTComma)nodeArrayList4.get(0);
        ttintNode6 = (TTInt)nodeArrayList5.get(0);
        ttrparNode7 = (TTRpar)nodeArrayList6.get(0);

        ptermNode1 = new AYearmonthdurationTerm(ttpreyearmonthdurationNode2, ttlparNode3, ttintNode4, ttcommaNode5, ttintNode6, ttrparNode7);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new59() /* reduce AGdayTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreGday ttpregdayNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTRpar ttrparNode5;
        ttpregdayNode2 = (TTPreGday)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttrparNode5 = (TTRpar)nodeArrayList4.get(0);

        ptermNode1 = new AGdayTerm(ttpregdayNode2, ttlparNode3, ttintNode4, ttrparNode5);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new60() /* reduce AGmonthTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreGmonth ttpregmonthNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTRpar ttrparNode5;
        ttpregmonthNode2 = (TTPreGmonth)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttrparNode5 = (TTRpar)nodeArrayList4.get(0);

        ptermNode1 = new AGmonthTerm(ttpregmonthNode2, ttlparNode3, ttintNode4, ttrparNode5);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new61() /* reduce AGyearTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreGyear ttpregyearNode2;
        TTLpar ttlparNode3;
        TTInt ttintNode4;
        TTRpar ttrparNode5;
        ttpregyearNode2 = (TTPreGyear)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttintNode4 = (TTInt)nodeArrayList3.get(0);
        ttrparNode5 = (TTRpar)nodeArrayList4.get(0);

        ptermNode1 = new AGyearTerm(ttpregyearNode2, ttlparNode3, ttintNode4, ttrparNode5);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new62() /* reduce AGyearmonthTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreGyearmonth ttpregyearmonthNode2;
        TTLpar ttlparNode3;
        PIntlist pintlistNode4;
        TTRpar ttrparNode5;
        ttpregyearmonthNode2 = (TTPreGyearmonth)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        pintlistNode4 = (PIntlist)nodeArrayList3.get(0);
        ttrparNode5 = (TTRpar)nodeArrayList4.get(0);

        ptermNode1 = new AGyearmonthTerm(ttpregyearmonthNode2, ttlparNode3, pintlistNode4, ttrparNode5);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new63() /* reduce AGmonthdayTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreGmonthday ttpregmonthdayNode2;
        TTLpar ttlparNode3;
        PIntlist pintlistNode4;
        TTRpar ttrparNode5;
        ttpregmonthdayNode2 = (TTPreGmonthday)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        pintlistNode4 = (PIntlist)nodeArrayList3.get(0);
        ttrparNode5 = (TTRpar)nodeArrayList4.get(0);

        ptermNode1 = new AGmonthdayTerm(ttpregmonthdayNode2, ttlparNode3, pintlistNode4, ttrparNode5);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new64() /* reduce ABase64binaryTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreBase64 ttprebase64Node2;
        TTLpar ttlparNode3;
        TTStr ttstrNode4;
        TTRpar ttrparNode5;
        ttprebase64Node2 = (TTPreBase64)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttstrNode4 = (TTStr)nodeArrayList3.get(0);
        ttrparNode5 = (TTRpar)nodeArrayList4.get(0);

        ptermNode1 = new ABase64binaryTerm(ttprebase64Node2, ttlparNode3, ttstrNode4, ttrparNode5);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new65() /* reduce AHexbinaryTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreHex ttprehexNode2;
        TTLpar ttlparNode3;
        TTStr ttstrNode4;
        TTRpar ttrparNode5;
        ttprehexNode2 = (TTPreHex)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttstrNode4 = (TTStr)nodeArrayList3.get(0);
        ttrparNode5 = (TTRpar)nodeArrayList4.get(0);

        ptermNode1 = new AHexbinaryTerm(ttprehexNode2, ttlparNode3, ttstrNode4, ttrparNode5);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new66() /* reduce AXmlliteralTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreXmlliteral ttprexmlliteralNode2;
        TTLpar ttlparNode3;
        TTStr ttstrNode4;
        TTRpar ttrparNode5;
        ttprexmlliteralNode2 = (TTPreXmlliteral)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttstrNode4 = (TTStr)nodeArrayList3.get(0);
        ttrparNode5 = (TTRpar)nodeArrayList4.get(0);

        ptermNode1 = new AXmlliteralTerm(ttprexmlliteralNode2, ttlparNode3, ttstrNode4, ttrparNode5);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new67() /* reduce AXmlliterallangTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreXmlliteral ttprexmlliteralNode2;
        TTLpar ttlparNode3;
        TTStr ttstrNode4;
        TTComma ttcommaNode5;
        TTStr ttstrNode6;
        TTRpar ttrparNode7;
        ttprexmlliteralNode2 = (TTPreXmlliteral)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttstrNode4 = (TTStr)nodeArrayList3.get(0);
        ttcommaNode5 = (TTComma)nodeArrayList4.get(0);
        ttstrNode6 = (TTStr)nodeArrayList5.get(0);
        ttrparNode7 = (TTRpar)nodeArrayList6.get(0);

        ptermNode1 = new AXmlliterallangTerm(ttprexmlliteralNode2, ttlparNode3, ttstrNode4, ttcommaNode5, ttstrNode6, ttrparNode7);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new68() /* reduce ARdftextTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TTPreRdftext ttprerdftextNode2;
        TTLpar ttlparNode3;
        TTStr ttstrNode4;
        TTComma ttcommaNode5;
        TTStr ttstrNode6;
        TTRpar ttrparNode7;
        ttprerdftextNode2 = (TTPreRdftext)nodeArrayList1.get(0);
        ttlparNode3 = (TTLpar)nodeArrayList2.get(0);
        ttstrNode4 = (TTStr)nodeArrayList3.get(0);
        ttcommaNode5 = (TTComma)nodeArrayList4.get(0);
        ttstrNode6 = (TTStr)nodeArrayList5.get(0);
        ttrparNode7 = (TTRpar)nodeArrayList6.get(0);

        ptermNode1 = new ARdftextTerm(ttprerdftextNode2, ttlparNode3, ttstrNode4, ttcommaNode5, ttstrNode6, ttrparNode7);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new69() /* reduce ABinaryBuiltin */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBuiltin pbuiltinNode1;
        {
            // Block
        PTerm ptermNode2;
        TTBinOp ttbinopNode3;
        PTerm ptermNode4;
        ptermNode2 = (PTerm)nodeArrayList1.get(0);
        ttbinopNode3 = (TTBinOp)nodeArrayList2.get(0);
        ptermNode4 = (PTerm)nodeArrayList3.get(0);

        pbuiltinNode1 = new ABinaryBuiltin(ptermNode2, ttbinopNode3, ptermNode4);
        }
	nodeList.add(pbuiltinNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new70() /* reduce AEqualsBuiltin */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBuiltin pbuiltinNode1;
        {
            // Block
        PTerm ptermNode2;
        TTEq tteqNode3;
        PTerm ptermNode4;
        ptermNode2 = (PTerm)nodeArrayList1.get(0);
        tteqNode3 = (TTEq)nodeArrayList2.get(0);
        ptermNode4 = (PTerm)nodeArrayList3.get(0);

        pbuiltinNode1 = new AEqualsBuiltin(ptermNode2, tteqNode3, ptermNode4);
        }
	nodeList.add(pbuiltinNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new71() /* reduce ATernaryBuiltin */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBuiltin pbuiltinNode1;
        {
            // Block
        PTerm ptermNode2;
        TTTerOp ttteropNode3;
        PTerm ptermNode4;
        TTEq tteqNode5;
        PTerm ptermNode6;
        ptermNode2 = (PTerm)nodeArrayList1.get(0);
        ttteropNode3 = (TTTerOp)nodeArrayList2.get(0);
        ptermNode4 = (PTerm)nodeArrayList3.get(0);
        tteqNode5 = (TTEq)nodeArrayList4.get(0);
        ptermNode6 = (PTerm)nodeArrayList5.get(0);

        pbuiltinNode1 = new ATernaryBuiltin(ptermNode2, ttteropNode3, ptermNode4, tteqNode5, ptermNode6);
        }
	nodeList.add(pbuiltinNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new72() /* reduce ATerminal$Expr */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PExpr pexprNode1;
        pexprNode1 = (PExpr)nodeArrayList1.get(0);
	if(pexprNode1 != null)
	{
	  listNode2.add(pexprNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new73() /* reduce ANonTerminal$Expr */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PExpr pexprNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pexprNode2 = (PExpr)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pexprNode2 != null)
	{
	  listNode3.add(pexprNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, REDUCE, 0}, {3, SHIFT, 1}, {7, SHIFT, 2}, {8, SHIFT, 3}, {9, SHIFT, 4}, {10, SHIFT, 5}, {14, SHIFT, 6}, {16, SHIFT, 7}, {17, SHIFT, 8}, {18, SHIFT, 9}, {19, SHIFT, 10}, {20, SHIFT, 11}, {21, SHIFT, 12}, {22, SHIFT, 13}, {23, SHIFT, 14}, {24, SHIFT, 15}, {25, SHIFT, 16}, {26, SHIFT, 17}, {27, SHIFT, 18}, {28, SHIFT, 19}, {29, SHIFT, 20}, {30, SHIFT, 21}, {31, SHIFT, 22}, {32, SHIFT, 23}, {33, SHIFT, 24}, {34, SHIFT, 25}, {35, SHIFT, 26}, {36, SHIFT, 27}, {37, SHIFT, 28}, {38, SHIFT, 29}, {39, SHIFT, 30}, {40, SHIFT, 31}, {41, SHIFT, 32}, },
			{{-1, ERROR, 1}, {7, SHIFT, 2}, {9, SHIFT, 4}, {10, SHIFT, 5}, {14, SHIFT, 6}, {16, SHIFT, 7}, {17, SHIFT, 8}, {18, SHIFT, 9}, {19, SHIFT, 10}, {20, SHIFT, 11}, {21, SHIFT, 12}, {22, SHIFT, 13}, {23, SHIFT, 14}, {24, SHIFT, 15}, {25, SHIFT, 16}, {26, SHIFT, 17}, {27, SHIFT, 18}, {28, SHIFT, 19}, {29, SHIFT, 20}, {30, SHIFT, 21}, {31, SHIFT, 22}, {32, SHIFT, 23}, {33, SHIFT, 24}, {34, SHIFT, 25}, {35, SHIFT, 26}, {36, SHIFT, 27}, {37, SHIFT, 28}, {38, SHIFT, 29}, {39, SHIFT, 30}, {40, SHIFT, 31}, {41, SHIFT, 32}, },
			{{-1, REDUCE, 25}, },
			{{-1, ERROR, 3}, {3, SHIFT, 1}, {7, SHIFT, 2}, {9, SHIFT, 4}, {10, SHIFT, 5}, {14, SHIFT, 6}, {16, SHIFT, 7}, {17, SHIFT, 8}, {18, SHIFT, 9}, {19, SHIFT, 10}, {20, SHIFT, 11}, {21, SHIFT, 12}, {22, SHIFT, 13}, {23, SHIFT, 14}, {24, SHIFT, 15}, {25, SHIFT, 16}, {26, SHIFT, 17}, {27, SHIFT, 18}, {28, SHIFT, 19}, {29, SHIFT, 20}, {30, SHIFT, 21}, {31, SHIFT, 22}, {32, SHIFT, 23}, {33, SHIFT, 24}, {34, SHIFT, 25}, {35, SHIFT, 26}, {36, SHIFT, 27}, {37, SHIFT, 28}, {38, SHIFT, 29}, {39, SHIFT, 30}, {40, SHIFT, 31}, {41, SHIFT, 32}, },
			{{-1, REDUCE, 16}, {5, SHIFT, 48}, },
			{{-1, ERROR, 5}, {17, SHIFT, 50}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 30}, },
			{{-1, REDUCE, 28}, },
			{{-1, REDUCE, 32}, },
			{{-1, ERROR, 10}, {5, SHIFT, 51}, },
			{{-1, ERROR, 11}, {5, SHIFT, 52}, },
			{{-1, ERROR, 12}, {5, SHIFT, 53}, },
			{{-1, ERROR, 13}, {5, SHIFT, 54}, },
			{{-1, ERROR, 14}, {5, SHIFT, 55}, },
			{{-1, ERROR, 15}, {5, SHIFT, 56}, },
			{{-1, ERROR, 16}, {5, SHIFT, 57}, },
			{{-1, ERROR, 17}, {5, SHIFT, 58}, },
			{{-1, ERROR, 18}, {5, SHIFT, 59}, },
			{{-1, ERROR, 19}, {5, SHIFT, 60}, },
			{{-1, ERROR, 20}, {5, SHIFT, 61}, },
			{{-1, ERROR, 21}, {5, SHIFT, 62}, },
			{{-1, ERROR, 22}, {5, SHIFT, 63}, },
			{{-1, ERROR, 23}, {5, SHIFT, 64}, },
			{{-1, ERROR, 24}, {5, SHIFT, 65}, },
			{{-1, ERROR, 25}, {5, SHIFT, 66}, },
			{{-1, ERROR, 26}, {5, SHIFT, 67}, },
			{{-1, ERROR, 27}, {5, SHIFT, 68}, },
			{{-1, ERROR, 28}, {5, SHIFT, 69}, },
			{{-1, ERROR, 29}, {5, SHIFT, 70}, },
			{{-1, ERROR, 30}, {5, SHIFT, 71}, },
			{{-1, ERROR, 31}, {5, SHIFT, 72}, },
			{{-1, ERROR, 32}, {5, SHIFT, 73}, },
			{{-1, ERROR, 33}, {42, ACCEPT, -1}, },
			{{-1, REDUCE, 72}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 3}, },
			{{-1, REDUCE, 4}, },
			{{-1, ERROR, 38}, {1, SHIFT, 74}, {2, SHIFT, 75}, {4, SHIFT, 76}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 13}, {0, SHIFT, 77}, },
			{{-1, ERROR, 41}, {11, SHIFT, 78}, {12, SHIFT, 79}, {13, SHIFT, 80}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 1}, {3, SHIFT, 1}, {7, SHIFT, 2}, {8, SHIFT, 3}, {9, SHIFT, 4}, {10, SHIFT, 5}, {14, SHIFT, 6}, {16, SHIFT, 7}, {17, SHIFT, 8}, {18, SHIFT, 9}, {19, SHIFT, 10}, {20, SHIFT, 11}, {21, SHIFT, 12}, {22, SHIFT, 13}, {23, SHIFT, 14}, {24, SHIFT, 15}, {25, SHIFT, 16}, {26, SHIFT, 17}, {27, SHIFT, 18}, {28, SHIFT, 19}, {29, SHIFT, 20}, {30, SHIFT, 21}, {31, SHIFT, 22}, {32, SHIFT, 23}, {33, SHIFT, 24}, {34, SHIFT, 25}, {35, SHIFT, 26}, {36, SHIFT, 27}, {37, SHIFT, 28}, {38, SHIFT, 29}, {39, SHIFT, 30}, {40, SHIFT, 31}, {41, SHIFT, 32}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 15}, },
			{{-1, ERROR, 46}, {0, SHIFT, 82}, {2, SHIFT, 75}, {4, SHIFT, 76}, },
			{{-1, REDUCE, 13}, },
			{{-1, ERROR, 48}, {6, SHIFT, 83}, {7, SHIFT, 2}, {9, SHIFT, 84}, {10, SHIFT, 5}, {14, SHIFT, 6}, {16, SHIFT, 7}, {17, SHIFT, 8}, {18, SHIFT, 9}, {19, SHIFT, 10}, {20, SHIFT, 11}, {21, SHIFT, 12}, {22, SHIFT, 13}, {23, SHIFT, 14}, {24, SHIFT, 15}, {25, SHIFT, 16}, {26, SHIFT, 17}, {27, SHIFT, 18}, {28, SHIFT, 19}, {29, SHIFT, 20}, {30, SHIFT, 21}, {31, SHIFT, 22}, {32, SHIFT, 23}, {33, SHIFT, 24}, {34, SHIFT, 25}, {35, SHIFT, 26}, {36, SHIFT, 27}, {37, SHIFT, 28}, {38, SHIFT, 29}, {39, SHIFT, 30}, {40, SHIFT, 31}, {41, SHIFT, 32}, },
			{{-1, REDUCE, 17}, {11, REDUCE, 24}, {12, REDUCE, 24}, {13, REDUCE, 24}, },
			{{-1, REDUCE, 34}, },
			{{-1, ERROR, 51}, {14, SHIFT, 87}, },
			{{-1, ERROR, 52}, {17, SHIFT, 88}, },
			{{-1, ERROR, 53}, {16, SHIFT, 89}, },
			{{-1, ERROR, 54}, {16, SHIFT, 90}, },
			{{-1, ERROR, 55}, {16, SHIFT, 91}, },
			{{-1, ERROR, 56}, {17, SHIFT, 92}, },
			{{-1, ERROR, 57}, {17, SHIFT, 93}, },
			{{-1, ERROR, 58}, {14, SHIFT, 94}, },
			{{-1, ERROR, 59}, {14, SHIFT, 95}, },
			{{-1, ERROR, 60}, {14, SHIFT, 96}, },
			{{-1, ERROR, 61}, {14, SHIFT, 97}, },
			{{-1, ERROR, 62}, {14, SHIFT, 98}, },
			{{-1, ERROR, 63}, {14, SHIFT, 99}, },
			{{-1, ERROR, 64}, {14, SHIFT, 100}, },
			{{-1, ERROR, 65}, {14, SHIFT, 102}, },
			{{-1, ERROR, 66}, {14, SHIFT, 100}, },
			{{-1, ERROR, 67}, {14, SHIFT, 104}, },
			{{-1, ERROR, 68}, {17, SHIFT, 105}, },
			{{-1, ERROR, 69}, {17, SHIFT, 106}, },
			{{-1, ERROR, 70}, {18, SHIFT, 107}, },
			{{-1, ERROR, 71}, {14, SHIFT, 108}, },
			{{-1, ERROR, 72}, {17, SHIFT, 109}, },
			{{-1, ERROR, 73}, {17, SHIFT, 110}, },
			{{-1, ERROR, 74}, {0, SHIFT, 111}, {3, SHIFT, 1}, {7, SHIFT, 2}, {9, SHIFT, 4}, {10, SHIFT, 5}, {14, SHIFT, 6}, {16, SHIFT, 7}, {17, SHIFT, 8}, {18, SHIFT, 9}, {19, SHIFT, 10}, {20, SHIFT, 11}, {21, SHIFT, 12}, {22, SHIFT, 13}, {23, SHIFT, 14}, {24, SHIFT, 15}, {25, SHIFT, 16}, {26, SHIFT, 17}, {27, SHIFT, 18}, {28, SHIFT, 19}, {29, SHIFT, 20}, {30, SHIFT, 21}, {31, SHIFT, 22}, {32, SHIFT, 23}, {33, SHIFT, 24}, {34, SHIFT, 25}, {35, SHIFT, 26}, {36, SHIFT, 27}, {37, SHIFT, 28}, {38, SHIFT, 29}, {39, SHIFT, 30}, {40, SHIFT, 31}, {41, SHIFT, 32}, },
			{{-1, ERROR, 75}, {3, SHIFT, 1}, {7, SHIFT, 2}, {9, SHIFT, 4}, {10, SHIFT, 5}, {14, SHIFT, 6}, {16, SHIFT, 7}, {17, SHIFT, 8}, {18, SHIFT, 9}, {19, SHIFT, 10}, {20, SHIFT, 11}, {21, SHIFT, 12}, {22, SHIFT, 13}, {23, SHIFT, 14}, {24, SHIFT, 15}, {25, SHIFT, 16}, {26, SHIFT, 17}, {27, SHIFT, 18}, {28, SHIFT, 19}, {29, SHIFT, 20}, {30, SHIFT, 21}, {31, SHIFT, 22}, {32, SHIFT, 23}, {33, SHIFT, 24}, {34, SHIFT, 25}, {35, SHIFT, 26}, {36, SHIFT, 27}, {37, SHIFT, 28}, {38, SHIFT, 29}, {39, SHIFT, 30}, {40, SHIFT, 31}, {41, SHIFT, 32}, },
			{{-1, ERROR, 76}, {3, SHIFT, 1}, {7, SHIFT, 2}, {9, SHIFT, 4}, {10, SHIFT, 5}, {14, SHIFT, 6}, {16, SHIFT, 7}, {17, SHIFT, 8}, {18, SHIFT, 9}, {19, SHIFT, 10}, {20, SHIFT, 11}, {21, SHIFT, 12}, {22, SHIFT, 13}, {23, SHIFT, 14}, {24, SHIFT, 15}, {25, SHIFT, 16}, {26, SHIFT, 17}, {27, SHIFT, 18}, {28, SHIFT, 19}, {29, SHIFT, 20}, {30, SHIFT, 21}, {31, SHIFT, 22}, {32, SHIFT, 23}, {33, SHIFT, 24}, {34, SHIFT, 25}, {35, SHIFT, 26}, {36, SHIFT, 27}, {37, SHIFT, 28}, {38, SHIFT, 29}, {39, SHIFT, 30}, {40, SHIFT, 31}, {41, SHIFT, 32}, },
			{{-1, REDUCE, 7}, },
			{{-1, ERROR, 78}, {7, SHIFT, 2}, {9, SHIFT, 84}, {10, SHIFT, 5}, {14, SHIFT, 6}, {16, SHIFT, 7}, {17, SHIFT, 8}, {18, SHIFT, 9}, {19, SHIFT, 10}, {20, SHIFT, 11}, {21, SHIFT, 12}, {22, SHIFT, 13}, {23, SHIFT, 14}, {24, SHIFT, 15}, {25, SHIFT, 16}, {26, SHIFT, 17}, {27, SHIFT, 18}, {28, SHIFT, 19}, {29, SHIFT, 20}, {30, SHIFT, 21}, {31, SHIFT, 22}, {32, SHIFT, 23}, {33, SHIFT, 24}, {34, SHIFT, 25}, {35, SHIFT, 26}, {36, SHIFT, 27}, {37, SHIFT, 28}, {38, SHIFT, 29}, {39, SHIFT, 30}, {40, SHIFT, 31}, {41, SHIFT, 32}, },
			{{-1, ERROR, 79}, {7, SHIFT, 2}, {9, SHIFT, 84}, {10, SHIFT, 5}, {14, SHIFT, 6}, {16, SHIFT, 7}, {17, SHIFT, 8}, {18, SHIFT, 9}, {19, SHIFT, 10}, {20, SHIFT, 11}, {21, SHIFT, 12}, {22, SHIFT, 13}, {23, SHIFT, 14}, {24, SHIFT, 15}, {25, SHIFT, 16}, {26, SHIFT, 17}, {27, SHIFT, 18}, {28, SHIFT, 19}, {29, SHIFT, 20}, {30, SHIFT, 21}, {31, SHIFT, 22}, {32, SHIFT, 23}, {33, SHIFT, 24}, {34, SHIFT, 25}, {35, SHIFT, 26}, {36, SHIFT, 27}, {37, SHIFT, 28}, {38, SHIFT, 29}, {39, SHIFT, 30}, {40, SHIFT, 31}, {41, SHIFT, 32}, },
			{{-1, ERROR, 80}, {7, SHIFT, 2}, {9, SHIFT, 84}, {10, SHIFT, 5}, {14, SHIFT, 6}, {16, SHIFT, 7}, {17, SHIFT, 8}, {18, SHIFT, 9}, {19, SHIFT, 10}, {20, SHIFT, 11}, {21, SHIFT, 12}, {22, SHIFT, 13}, {23, SHIFT, 14}, {24, SHIFT, 15}, {25, SHIFT, 16}, {26, SHIFT, 17}, {27, SHIFT, 18}, {28, SHIFT, 19}, {29, SHIFT, 20}, {30, SHIFT, 21}, {31, SHIFT, 22}, {32, SHIFT, 23}, {33, SHIFT, 24}, {34, SHIFT, 25}, {35, SHIFT, 26}, {36, SHIFT, 27}, {37, SHIFT, 28}, {38, SHIFT, 29}, {39, SHIFT, 30}, {40, SHIFT, 31}, {41, SHIFT, 32}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 8}, },
			{{-1, REDUCE, 18}, },
			{{-1, ERROR, 84}, {5, SHIFT, 48}, },
			{{-1, ERROR, 85}, {4, SHIFT, 119}, {6, SHIFT, 120}, },
			{{-1, REDUCE, 20}, },
			{{-1, ERROR, 87}, {6, SHIFT, 121}, },
			{{-1, ERROR, 88}, {6, SHIFT, 122}, },
			{{-1, ERROR, 89}, {6, SHIFT, 123}, },
			{{-1, ERROR, 90}, {6, SHIFT, 124}, },
			{{-1, ERROR, 91}, {6, SHIFT, 125}, },
			{{-1, ERROR, 92}, {6, SHIFT, 126}, },
			{{-1, ERROR, 93}, {6, SHIFT, 127}, },
			{{-1, ERROR, 94}, {4, SHIFT, 128}, },
			{{-1, ERROR, 95}, {4, SHIFT, 129}, },
			{{-1, ERROR, 96}, {4, SHIFT, 130}, },
			{{-1, ERROR, 97}, {4, SHIFT, 131}, },
			{{-1, ERROR, 98}, {4, SHIFT, 132}, },
			{{-1, ERROR, 99}, {6, SHIFT, 133}, },
			{{-1, REDUCE, 23}, },
			{{-1, ERROR, 101}, {4, SHIFT, 134}, {6, SHIFT, 135}, },
			{{-1, ERROR, 102}, {6, SHIFT, 136}, },
			{{-1, ERROR, 103}, {4, SHIFT, 134}, {6, SHIFT, 137}, },
			{{-1, ERROR, 104}, {6, SHIFT, 138}, },
			{{-1, ERROR, 105}, {6, SHIFT, 139}, },
			{{-1, ERROR, 106}, {6, SHIFT, 140}, },
			{{-1, ERROR, 107}, {6, SHIFT, 141}, },
			{{-1, ERROR, 108}, {4, SHIFT, 142}, },
			{{-1, ERROR, 109}, {4, SHIFT, 143}, {6, SHIFT, 144}, },
			{{-1, ERROR, 110}, {4, SHIFT, 145}, },
			{{-1, REDUCE, 5}, },
			{{-1, ERROR, 112}, {0, SHIFT, 146}, {2, SHIFT, 75}, {4, SHIFT, 76}, },
			{{-1, REDUCE, 10}, },
			{{-1, REDUCE, 11}, },
			{{-1, REDUCE, 69}, },
			{{-1, ERROR, 116}, {13, SHIFT, 147}, },
			{{-1, REDUCE, 70}, },
			{{-1, REDUCE, 24}, },
			{{-1, ERROR, 119}, {7, SHIFT, 2}, {9, SHIFT, 84}, {10, SHIFT, 5}, {14, SHIFT, 6}, {16, SHIFT, 7}, {17, SHIFT, 8}, {18, SHIFT, 9}, {19, SHIFT, 10}, {20, SHIFT, 11}, {21, SHIFT, 12}, {22, SHIFT, 13}, {23, SHIFT, 14}, {24, SHIFT, 15}, {25, SHIFT, 16}, {26, SHIFT, 17}, {27, SHIFT, 18}, {28, SHIFT, 19}, {29, SHIFT, 20}, {30, SHIFT, 21}, {31, SHIFT, 22}, {32, SHIFT, 23}, {33, SHIFT, 24}, {34, SHIFT, 25}, {35, SHIFT, 26}, {36, SHIFT, 27}, {37, SHIFT, 28}, {38, SHIFT, 29}, {39, SHIFT, 30}, {40, SHIFT, 31}, {41, SHIFT, 32}, },
			{{-1, REDUCE, 19}, },
			{{-1, REDUCE, 27}, },
			{{-1, REDUCE, 29}, },
			{{-1, REDUCE, 31}, },
			{{-1, REDUCE, 37}, },
			{{-1, REDUCE, 38}, },
			{{-1, REDUCE, 64}, },
			{{-1, REDUCE, 36}, },
			{{-1, ERROR, 128}, {14, SHIFT, 149}, },
			{{-1, ERROR, 129}, {14, SHIFT, 150}, },
			{{-1, ERROR, 130}, {14, SHIFT, 151}, },
			{{-1, ERROR, 131}, {14, SHIFT, 152}, },
			{{-1, ERROR, 132}, {14, SHIFT, 153}, },
			{{-1, REDUCE, 59}, },
			{{-1, ERROR, 134}, {14, SHIFT, 154}, },
			{{-1, REDUCE, 63}, },
			{{-1, REDUCE, 60}, },
			{{-1, REDUCE, 62}, },
			{{-1, REDUCE, 61}, },
			{{-1, REDUCE, 65}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 33}, },
			{{-1, ERROR, 142}, {14, SHIFT, 155}, },
			{{-1, ERROR, 143}, {17, SHIFT, 156}, },
			{{-1, REDUCE, 66}, },
			{{-1, ERROR, 145}, {17, SHIFT, 157}, },
			{{-1, REDUCE, 6}, },
			{{-1, ERROR, 147}, {7, SHIFT, 2}, {9, SHIFT, 84}, {10, SHIFT, 5}, {14, SHIFT, 6}, {16, SHIFT, 7}, {17, SHIFT, 8}, {18, SHIFT, 9}, {19, SHIFT, 10}, {20, SHIFT, 11}, {21, SHIFT, 12}, {22, SHIFT, 13}, {23, SHIFT, 14}, {24, SHIFT, 15}, {25, SHIFT, 16}, {26, SHIFT, 17}, {27, SHIFT, 18}, {28, SHIFT, 19}, {29, SHIFT, 20}, {30, SHIFT, 21}, {31, SHIFT, 22}, {32, SHIFT, 23}, {33, SHIFT, 24}, {34, SHIFT, 25}, {35, SHIFT, 26}, {36, SHIFT, 27}, {37, SHIFT, 28}, {38, SHIFT, 29}, {39, SHIFT, 30}, {40, SHIFT, 31}, {41, SHIFT, 32}, },
			{{-1, REDUCE, 21}, },
			{{-1, ERROR, 149}, {4, SHIFT, 159}, },
			{{-1, ERROR, 150}, {4, SHIFT, 160}, },
			{{-1, ERROR, 151}, {4, SHIFT, 161}, },
			{{-1, ERROR, 152}, {6, SHIFT, 162}, },
			{{-1, ERROR, 153}, {4, SHIFT, 163}, },
			{{-1, REDUCE, 22}, },
			{{-1, ERROR, 155}, {4, SHIFT, 164}, },
			{{-1, ERROR, 156}, {6, SHIFT, 165}, },
			{{-1, ERROR, 157}, {6, SHIFT, 166}, },
			{{-1, REDUCE, 71}, },
			{{-1, ERROR, 159}, {14, SHIFT, 167}, },
			{{-1, ERROR, 160}, {14, SHIFT, 168}, },
			{{-1, ERROR, 161}, {14, SHIFT, 169}, },
			{{-1, REDUCE, 58}, },
			{{-1, ERROR, 163}, {14, SHIFT, 170}, },
			{{-1, ERROR, 164}, {14, SHIFT, 171}, {16, SHIFT, 172}, },
			{{-1, REDUCE, 67}, },
			{{-1, REDUCE, 68}, },
			{{-1, ERROR, 167}, {4, SHIFT, 173}, {6, SHIFT, 174}, },
			{{-1, ERROR, 168}, {4, SHIFT, 175}, },
			{{-1, ERROR, 169}, {4, SHIFT, 176}, },
			{{-1, ERROR, 170}, {4, SHIFT, 177}, },
			{{-1, ERROR, 171}, {4, SHIFT, 178}, {6, SHIFT, 179}, },
			{{-1, ERROR, 172}, {4, SHIFT, 180}, {6, SHIFT, 181}, },
			{{-1, ERROR, 173}, {14, SHIFT, 182}, },
			{{-1, REDUCE, 39}, },
			{{-1, ERROR, 175}, {14, SHIFT, 183}, },
			{{-1, ERROR, 176}, {14, SHIFT, 184}, },
			{{-1, ERROR, 177}, {14, SHIFT, 185}, {16, SHIFT, 186}, },
			{{-1, ERROR, 178}, {14, SHIFT, 187}, },
			{{-1, REDUCE, 41}, },
			{{-1, ERROR, 180}, {14, SHIFT, 188}, },
			{{-1, REDUCE, 43}, },
			{{-1, ERROR, 182}, {4, SHIFT, 189}, },
			{{-1, ERROR, 183}, {4, SHIFT, 190}, },
			{{-1, ERROR, 184}, {4, SHIFT, 191}, },
			{{-1, ERROR, 185}, {4, SHIFT, 192}, },
			{{-1, ERROR, 186}, {6, SHIFT, 193}, },
			{{-1, ERROR, 187}, {4, SHIFT, 194}, {6, SHIFT, 195}, },
			{{-1, ERROR, 188}, {4, SHIFT, 196}, },
			{{-1, ERROR, 189}, {14, SHIFT, 197}, },
			{{-1, ERROR, 190}, {14, SHIFT, 198}, },
			{{-1, ERROR, 191}, {14, SHIFT, 199}, },
			{{-1, ERROR, 192}, {14, SHIFT, 200}, },
			{{-1, REDUCE, 56}, },
			{{-1, ERROR, 194}, {14, SHIFT, 201}, },
			{{-1, REDUCE, 45}, },
			{{-1, ERROR, 196}, {14, SHIFT, 202}, },
			{{-1, ERROR, 197}, {6, SHIFT, 203}, },
			{{-1, ERROR, 198}, {4, SHIFT, 204}, },
			{{-1, ERROR, 199}, {4, SHIFT, 205}, },
			{{-1, ERROR, 200}, {6, SHIFT, 206}, },
			{{-1, ERROR, 201}, {4, SHIFT, 207}, {6, SHIFT, 208}, },
			{{-1, ERROR, 202}, {6, SHIFT, 209}, },
			{{-1, REDUCE, 40}, },
			{{-1, ERROR, 204}, {14, SHIFT, 210}, {16, SHIFT, 211}, },
			{{-1, ERROR, 205}, {14, SHIFT, 212}, {16, SHIFT, 213}, },
			{{-1, REDUCE, 57}, },
			{{-1, ERROR, 207}, {14, SHIFT, 214}, },
			{{-1, REDUCE, 42}, },
			{{-1, REDUCE, 44}, },
			{{-1, ERROR, 210}, {4, SHIFT, 215}, {6, SHIFT, 216}, },
			{{-1, ERROR, 211}, {4, SHIFT, 217}, {6, SHIFT, 218}, },
			{{-1, ERROR, 212}, {4, SHIFT, 219}, {6, SHIFT, 220}, },
			{{-1, ERROR, 213}, {6, SHIFT, 221}, },
			{{-1, ERROR, 214}, {6, SHIFT, 222}, },
			{{-1, ERROR, 215}, {14, SHIFT, 223}, },
			{{-1, REDUCE, 47}, },
			{{-1, ERROR, 217}, {14, SHIFT, 224}, },
			{{-1, REDUCE, 49}, },
			{{-1, ERROR, 219}, {14, SHIFT, 225}, },
			{{-1, REDUCE, 53}, },
			{{-1, REDUCE, 54}, },
			{{-1, REDUCE, 46}, },
			{{-1, ERROR, 223}, {4, SHIFT, 226}, {6, SHIFT, 227}, },
			{{-1, ERROR, 224}, {4, SHIFT, 228}, },
			{{-1, ERROR, 225}, {6, SHIFT, 229}, },
			{{-1, ERROR, 226}, {14, SHIFT, 230}, },
			{{-1, REDUCE, 51}, },
			{{-1, ERROR, 228}, {14, SHIFT, 231}, },
			{{-1, REDUCE, 55}, },
			{{-1, ERROR, 230}, {4, SHIFT, 232}, {6, SHIFT, 233}, },
			{{-1, ERROR, 231}, {6, SHIFT, 234}, },
			{{-1, ERROR, 232}, {14, SHIFT, 235}, },
			{{-1, REDUCE, 48}, },
			{{-1, REDUCE, 50}, },
			{{-1, ERROR, 235}, {6, SHIFT, 236}, },
			{{-1, REDUCE, 52}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 33}, },
			{{-1, 34}, {43, 81}, },
			{{-1, 35}, },
			{{-1, 36}, },
			{{-1, 37}, },
			{{-1, 38}, {3, 46}, {74, 112}, },
			{{-1, 39}, {75, 113}, {76, 114}, },
			{{-1, 47}, {0, 40}, {1, 44}, {43, 40}, },
			{{-1, 49}, {84, 118}, },
			{{-1, 85}, },
			{{-1, 101}, {66, 103}, },
			{{-1, 41}, {48, 86}, {78, 115}, {79, 116}, {80, 117}, {119, 148}, {147, 158}, },
			{{-1, 42}, {1, 45}, },
			{{-1, 43}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: t not, t variable, '?-', t id, '_', t int, t dec, t str, t sq, '_integer', '_string', '_decimal', '_double', '_float', '_base64binary', '_boolean', '_date', '_datetime', '_duration', '_yearmonthduration', '_daytimeduration', '_gday', '_gmonthday', '_gmonth', '_gyearmonth', '_gyear', '_hexbinary', '_iri', '_sqname', '_time', '_xmlliteral', '_rdftext', EOF",
			"expecting: t variable, t id, '_', t int, t dec, t str, t sq, '_integer', '_string', '_decimal', '_double', '_float', '_base64binary', '_boolean', '_date', '_datetime', '_duration', '_yearmonthduration', '_daytimeduration', '_gday', '_gmonthday', '_gmonth', '_gyearmonth', '_gyear', '_hexbinary', '_iri', '_sqname', '_time', '_xmlliteral', '_rdftext'",
			"expecting: t dot, ':-', 'and', t comma, ')', t bin op, t ter op, t eq",
			"expecting: t not, t variable, t id, '_', t int, t dec, t str, t sq, '_integer', '_string', '_decimal', '_double', '_float', '_base64binary', '_boolean', '_date', '_datetime', '_duration', '_yearmonthduration', '_daytimeduration', '_gday', '_gmonthday', '_gmonth', '_gyearmonth', '_gyear', '_hexbinary', '_iri', '_sqname', '_time', '_xmlliteral', '_rdftext'",
			"expecting: t dot, ':-', 'and', t comma, '('",
			"expecting: t str",
			"expecting: '('",
			"expecting: EOF",
			"expecting: ':-', 'and', t comma",
			"expecting: t dot, ':-', 'and', t comma",
			"expecting: t bin op, t ter op, t eq",
			"expecting: t dot, 'and', t comma",
			"expecting: ')', t variable, t id, '_', t int, t dec, t str, t sq, '_integer', '_string', '_decimal', '_double', '_float', '_base64binary', '_boolean', '_date', '_datetime', '_duration', '_yearmonthduration', '_daytimeduration', '_gday', '_gmonthday', '_gmonth', '_gyearmonth', '_gyear', '_hexbinary', '_iri', '_sqname', '_time', '_xmlliteral', '_rdftext'",
			"expecting: t dot, ':-', 'and', t comma, t bin op, t ter op, t eq",
			"expecting: t int",
			"expecting: t dec",
			"expecting: t sq",
			"expecting: t dot, t not, t variable, t id, '_', t int, t dec, t str, t sq, '_integer', '_string', '_decimal', '_double', '_float', '_base64binary', '_boolean', '_date', '_datetime', '_duration', '_yearmonthduration', '_daytimeduration', '_gday', '_gmonthday', '_gmonth', '_gyearmonth', '_gyear', '_hexbinary', '_iri', '_sqname', '_time', '_xmlliteral', '_rdftext'",
			"expecting: t comma, ')'",
			"expecting: ')'",
			"expecting: t comma",
			"expecting: t eq",
			"expecting: t dot, ':-', 'and', t comma, ')', t eq",
			"expecting: t int, t dec",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 5, 2, 2, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 0, 0, 0, 0, 8, 9, 9, 10, 9, 0, 9, 9, 11, 9, 12, 13, 2, 14, 5, 15, 15, 15, 5, 5, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 5, 5, 16, 14, 5, 5, 17, 3, 3, 0, 1, 1, 1, 0, 0, 2, 6, 18, 18, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 19, 18, 18, 19, 18, 19, 19, 19, 19, 20, 18, 20, 0, 11, 9, 9, 9, 21, 9, 22, 1, 2, 2, 2, 2, 2, 2, 2, 2, 14, 14, 14, 14, 14, 2, 14, 2, 2, 2, 2, 2, 2, 2, 14, 5, 2, 5, 0, 1, 18, 20, 20, 20, 19, 20, 18, 20, 19, 19, 9, 14, 14, 14, 2, 14, 23, 2, 2, 18, 20, 20, 20, 18, 18, 14, 2, 14, 14, 23, 14, 2, 14, 2, 20, 20, 20, 20, 19, 18, 20, 14, 14, 14, 14, 2, 14, 2, 14, 19, 20, 20, 19, 18, 19, 2, 23, 23, 2, 14, 2, 2, 18, 18, 18, 19, 19, 14, 2, 14, 2, 14, 2, 2, 2, 18, 20, 19, 14, 2, 14, 2, 18, 19, 14, 2, 2, 19, 2, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
